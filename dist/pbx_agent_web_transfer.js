var Event=require("./events"),cfg=require("../../pbx_config"),pbx_db=require("./pbx_db"),pbx_api=require("./api/pbx_api"),pbx_zmq=require("./pbx_zmq"),pbx_logger=require("./logger/pbx_logger"),awsS3=require("./s3/awsS3"),agent_processor=require("./agent_processor"),express=require("express"),dt=require("./common/datetime"),ari=require("ari-client"),util=require("util"),path=require("path"),fs=require("fs"),mv=require("mv"),logger=new pbx_logger,dateTime=new dt,agentProcessor=new agent_processor,awsS3=new awsS3,dbOutput="",dbSMEid="",api=new pbx_api,zmq=new pbx_zmq;function AgentOutgoingCall(E){logger.log("IMP",E.channel.id,"agent_transfer_web","Internal Function [AgentOutgoingCall]"),this.state_name="agent_transfer_state",logger.log("DEB",E.channel.id,"agent_transfer_web","Current State ["+E.currentState+"] Update to ==> [dialing]"),E.currentState="dialing",E.dialStatus="NOANSWER";E.totalHoldDuration=0,this.enter=function(){var a,r,t,e,n,g;new pbx_db;function l(e,n){logger.log("IMP",E.channel.id,"agent_transfer_web","Internal Function [start_playback]"),"YOUR_CALL_IMPT_TO_US"==E.user_ivr_state&&(logger.log("DEB",E.channel.id,"agent_transfer_web","IVR STATE (YOUR_CALL_IMPT_TO_US)"),current_sound="sound:"+cfg.media.dir+"/"+cfg.media.waiting_imp_call+"-"+E.language,logger.log("DEB",E.channel.id,"ivr_detail","Going to play media["+current_sound+"]"),a=null,E.gmediaFile=current_sound,a=E.client.Playback(),logger.log("DEB",E.channel.id,"agent_transfer_web","channel:",E.channel.caller),n.play({media:current_sound},a,function(e,n){logger.log("ERR",E.channel.id,"ivr_detail","...In Playback Handler:"+e)})),"YOUR_CALL_IMPT_TO_US_15SEC"==E.user_ivr_state&&(logger.log("DEB",E.channel.id,"agent_transfer_web","IVR STATE (YOUR_CALL_IMPT_TO_US_15SEC)"),current_sound="sound:"+cfg.media.dir+"/"+cfg.media.waiting_imp_call_15sec+"-"+E.language,logger.log("DEB",E.channel.id,"ivr_detail","Going to play media["+current_sound+"]"),a=null,E.gmediaFile=current_sound,a=E.client.Playback(),logger.log("DEB",E.channel.id,"agent_transfer_web","channel:",E.channel.caller),n.play({media:current_sound},a,function(e,n){logger.log("ERR",E.channel.id,"ivr_detail","...In Playback Handler:"+e)})),"req_ATTENDANT_CALL_TRANSFER"==E.user_ivr_state?(logger.log("DEB",E.channel.id,"agent_transfer_web","IVR STATE (req_ATTENDANT_CALL_TRANSFER)"),current_sound="sound:"+cfg.media.dir+"/"+cfg.media.call_transfer+"-"+E.language,logger.log("DEB",E.channel.id,"ivr_detail","Going to play media["+current_sound+"]"),a=null,E.gmediaFile=current_sound,logger.log("DEB",E.channel.id,"ivr_detail","callBridgeId["+E.callBridgeId+"]"),a=E.client.Playback(),logger.log("DEB",E.channel.id,"agent_transfer_web","channel:",E.channel.caller),E.client.bridges.play({media:current_sound,bridgeId:E.callBridgeId},a,function(e,n){logger.log("ERR",E.channel.id,"ivr_detail","...In Playback Handler:"+e)})):"TRANSFER_AGENT_BUSY"==E.user_ivr_state?(logger.log("DEB",E.channel.id,"agent_transfer_web","IVR STATE (TRANSFER_AGENT_BUSY)"),current_sound="sound:"+cfg.media.dir+"/"+cfg.media.agent_ext_busy+"-"+E.language,logger.log("DEB",E.channel.id,"ivr_detail","Going to play media["+current_sound+"]"),a=null,E.gmediaFile=current_sound,a=E.client.Playback(),logger.log("DEB",E.channel.id,"agent_transfer_web","channel:",E.channel.caller),n.play({media:current_sound},a,function(e,n){logger.log("ERR",E.channel.id,"ivr_detail","...In Playback Handler:"+e)})):"TRANSFER_AGENT_INVALID"==E.user_ivr_state?(logger.log("DEB",E.channel.id,"agent_transfer_web","IVR STATE (TRANSFER_AGENT_INVALID)"),current_sound="sound:"+cfg.media.dir+"/"+cfg.media.invalid_agent_ext+"-"+E.language,logger.log("DEB",E.channel.id,"ivr_detail","Going to play media["+current_sound+"]"),a=null,E.gmediaFile=current_sound,a=E.client.Playback(),logger.log("DEB",E.channel.id,"agent_transfer_web","channel:",E.channel.caller),n.play({media:current_sound},a,function(e,n){logger.log("ERR",E.channel.id,"ivr_detail","...In Playback Handler:"+e)})):"TRANSFER_AGENT_NOTREACHABLE"==E.user_ivr_state?(logger.log("DEB",E.channel.id,"agent_transfer_web","IVR STATE (TRANSFER_AGENT_NOTREACHABLE)"),current_sound="sound:"+cfg.media.dir+"/"+cfg.media.notrechable_agent_ext+"-"+E.language,logger.log("DEB",E.channel.id,"ivr_detail","Going to play media["+current_sound+"]"),a=null,E.gmediaFile=current_sound,a=E.client.Playback(),logger.log("DEB",E.channel.id,"agent_transfer_web","channel:",E.channel.caller),n.play({media:current_sound},a,function(e,n){logger.log("ERR",E.channel.id,"ivr_detail","...In Playback Handler:"+e)})):"TRANSFER_AGENT_ONBREAK"==E.user_ivr_state?(logger.log("DEB",E.channel.id,"agent_transfer_web","IVR STATE (TRANSFER_AGENT_ONBREAK)"),current_sound="sound:"+cfg.media.dir+"/"+cfg.media.agent_ext_onbreak+"-"+E.language,logger.log("DEB",E.channel.id,"ivr_detail","Going to play media["+current_sound+"]"),a=null,E.gmediaFile=current_sound,a=E.client.Playback(),logger.log("DEB",E.channel.id,"agent_transfer_web","channel:",E.channel.caller),n.play({media:current_sound},a,function(e,n){logger.log("ERR",E.channel.id,"ivr_detail","...In Playback Handler:"+e)})):"caller_YOUR_HOLD_MUSIC"==E.user_ivr_state?(logger.log("DEB",E.channel.id,"agent_transfer_web","IVR STATE (caller_YOUR_HOLD_MUSIC)"),current_sound="sound:"+cfg.media.dir+"/"+cfg.media.call_hold_music_35sec+"-"+E.language,logger.log("DEB",E.channel.id,"ivr_detail","Going to play media["+current_sound+"]"),a=null,E.transHoldMusic="1",E.gmediaFile=current_sound,a=E.client.Playback(),E.orignalAgentPlayback=a,logger.log("DEB",E.channel.id,"agent_transfer_web","channel:",E.channel.caller),n.play({media:current_sound},a,function(e,n){logger.log("ERR",E.channel.id,"ivr_detail","...In Playback Handler:"+e)})):"1"==E.transHoldMusic&&(current_sound="sound:"+cfg.media.dir+"/"+cfg.media.call_hold_music_35sec+"-"+E.language,logger.log("DEB",E.channel.id,"ivr_detail","Going to play media["+current_sound+"]"),a=null,E.transHoldMusic="1",E.gmediaFile=current_sound,a=E.client.Playback(),logger.log("DEB",E.channel.id,"agent_transfer_web","channel:",E.channel.caller),n.play({media:current_sound},a,function(e,n){logger.log("ERR",E.channel.id,"ivr_detail","...In Playback Handler:"+e)}))}function o(e){logger.log("IMP",E.channel.id,"agent_transfer_web","ON Event [on_playback_finished]"),logger.log("DEB",E.channel.id,"agent_transfer_web","on_playback_finished ivr state "+E.user_ivr_state),"TRANSFER_AGENT_ONBREAK"!=E.user_ivr_state&&"TRANSFER_AGENT_NOTREACHABLE"!=E.user_ivr_state&&"TRANSFER_AGENT_INVALID"!=E.user_ivr_state&&"TRANSFER_AGENT_BUSY"!=E.user_ivr_state||0==E.dialedLegDinit&&i(),"req_UNATTENDANT_CALL_TRANSFER"==E.user_ivr_state?("1"==E.flagTransferDtmfStarOne&&(logger.log("DEB",E.channel.id,"agent_transfer_web","[timerTransferDtmf] timer initialize.."),E.objTransferDtmfStarOne=setTimeout(f,1e3*cfg.timer.transfer_dtmf_timer),E.timerState="transfer_dtmf_input"),a&&a.id==e.playback.id&&E.channel&&(logger.log("DEB",E.channel.id,"agent_transfer_web","Play Promot ("+E.gmediaFile+") finished"),"1"==E.transHoldMusic&&(l(E.currentState,E.channel),logger.log("DEB",E.channel.id,"agent_transfer_web","Play Hold Music to Customer till we stopped...")),"YOUR_CALL_IMPT_TO_US"!=E.user_ivr_state)&&E.user_ivr_state):"TRANSFER_AGENT_INVALID"==E.user_ivr_state&&("1"==E.transHoldFlag&&(logger.log("DEB",E.channel.id,"agent_transfer_web","UnHold (default)"),E.client.channels.stopMoh({channelId:E.channel.id},function(e){e?logger.log("ERR",E.channel.id,"agent_transfer_web","["+this.state_name+"]: error while UNHOLD stopMoh customer: "+e):(logger.log("DEB",E.channel.id,"agent_transfer_web","Channel UNHOLD stopMoh now..."),E.transHoldFlag="0")})),E.user_ivr_state="req_UNATTENDANT_CALL_TRANSFER",E.agent_extention="")}function i(){logger.log("IMP",E.channel.id,"agent_transfer_web","Internal Function [jump_back_to_dailed_session]"),E.transferLeg.removeListener("ChannelHangupRequest",d),E.transferLeg.removeListener("PlaybackFinished",o),E.transferLeg.removeListener("ChannelStateChange",u),E.transferLeg.removeListener("ChannelDtmfReceived",s),E.dialedLeg.removeListener("ChannelDtmfReceived",s),logger.log("DEB",E.channel.id,"agent_transfer_web","Update state from ["+E.user_ivr_state+"] to [FAILED_TRANSFER_CASE]"),E.user_ivr_state="FAILED_TRANSFER_CASE",logger.log("DEB",E.channel.id,"agent_transfer_web","State-Machine Update to ==> [Event.AGENT_CALL]"),E.state_machine.change_state(Event.AGENT_CALL)}function s(e,r){var n;switch(logger.log("IMP",E.channel.id,"agent_transfer_web","ON Event [on_dtmf]"),logger.log("DEB",E.channel.id,"agent_transfer_web","DTMF event("+e.digit+") "),"req_ATTENDANT_CALL_TRANSFER"==E.user_ivr_state||"req_UNATTENDANT_CALL_TRANSFER"==E.user_ivr_state?(E.agent_extention=E.agent_extention+e.digit,"4"<=E.agent_extention.length?(logger.log("DEB",E.channel.id,"agent_transfer_web","lets clear the timer objTransferDtmfStarOne"),clearTimeout(E.objTransferDtmfStarOne),logger.log("DEB",E.channel.id,"agent_transfer_web","Complete Agent Extention Received ("+E.agent_extention+") & length ("+E.agent_extention.length+")"),logger.log("DEB",E.channel.id,"agent_transfer_web","Update state from ["+E.user_ivr_state+"] to [TRANSFER_CALL_TO_EXTENTION]"),E.callagentincomingstate="TRANSFER_CALL_TO_EXTENTION",logger.log("DEB",E.channel.id,"user_detail","going to call function checkValidAgentExt"),api.checkValidAgentExt(E.channel.id,E.smeID,E.agent_extention,E.callSessionId,function(e,n,a){logger.log("DEB",E.channel.id,"agent_transfer_web","API Status:"+a.status),logger.log("DEB",E.channel.id,"agent_transfer_web","API Message:"+a.message),logger.log("DEB",E.channel.id,"agent_transfer_web","API in_agent_id:"+a.data[0].in_agent_id),e?logger.log("ERR",E.channel.id,"agent_transfer_web","error in validating agent extention("+E.agent_extention+") "+e):("0"==a.status?(E.callType="1",logger.log("DEB",E.channel.id,"agent_transfer_web","Agent Ext is invalid"),E.user_ivr_state="TRANSFER_AGENT_INVALID",l(E.currentState,r),logger.log("DEB",E.channel.id,"agent_transfer_web","restting agent_extention to black for start again."),E.agent_extention=""):(E.transAgentMobile=a.data[0].in_agent_mobile,E.transAgentId=a.data[0].in_agent_id,E.transAgentGroup=a.data[0].in_group_id,E.transAgenStatus=a.data[0].in_agent_status,E.transAgenSticky=a.data[0].in_agent_sticky,E.transAgenMasking=a.data[0].in_agent_masking,E.transAgenScore=a.data[0].in_agent_score,E.transAgenStickyDays=a.data[0].in_agent_sticky_days,E.transAgenEmailId=a.data[0].in_email_id,logger.log("DEB",E.channel.id,"agent_transfer_web","call transfer Agent Mobile No("+E.transAgentMobile+")"),logger.log("DEB",E.channel.id,"agent_transfer_web","call transfer Agent ID("+E.transAgentId+")"),logger.log("DEB",E.channel.id,"agent_transfer_web","call transfer Agent Group("+E.transAgentGroup+")"),logger.log("DEB",E.channel.id,"agent_transfer_web","call transfer Agent Status("+E.transAgenStatus+")"),logger.log("DEB",E.channel.id,"agent_transfer_web","call transfer Agent Sticky("+E.transAgenSticky+")"),logger.log("DEB",E.channel.id,"agent_transfer_web","call transfer Agent Masking("+E.transAgenMasking+")"),logger.log("DEB",E.channel.id,"agent_transfer_web","call transfer Agent Score("+E.transAgenScore+")"),logger.log("DEB",E.channel.id,"agent_transfer_web","call transfer Agent Sticky Days("+E.transAgenStickyDays+")"),logger.log("DEB",E.channel.id,"agent_transfer_web","call transfer Agent Email("+E.transAgenEmailId+")"),"1"==E.transAgenStatus?(logger.log("DEB",E.channel.id,"agent_transfer_web","Lets transfer call to agent.."),logger.log("DEB",E.channel.id,"agent_transfer_web","removing custome from bridge for now...."),e=E.channel,a=E.callBridge,logger.log("IMP",E.channel.id,"agent_transfer_web","Internal Function [removeChannelsFromBridge]"),logger.log("DEB",E.channel.id,"agent_transfer_web","[[[[[[[[[[[[[[[[[[[[[ Removing channel "+e.id+" from bridge: "+a.id+"]]]]]]]]]]]]]]]]]]]]]"),E.client.bridges.removeChannel({bridgeId:a.id,channel:e.id},function(e){if(e)throw e;logger.log("DEB",E.channel.id,"agent_transfer_web","removeChannel")}),E.user_ivr_state="caller_YOUR_HOLD_MUSIC","0"==E.transLegFlag?(E.orignalAgentHoldMusic="1",l(E.currentState,E.dialedLeg)):(E.orignalAgentHoldMusic="1",l(E.currentState,E.transferLeg)),"UNATTENDANT_CALL_TRANSFER"==E.transType&&_(r,E.channel,E.callBridge),transfer(E.channel)):("2"==E.transAgenStatus?(logger.log("DEB",E.channel.id,"agent_transfer_web","Agent is already on a call"),E.user_ivr_state="TRANSFER_AGENT_BUSY"):"3"==E.transAgenStatus?(logger.log("DEB",E.channel.id,"agent_transfer_web","Agent is on break"),E.user_ivr_state="TRANSFER_AGENT_ONBREAK"):(logger.log("ERR",E.channel.id,"agent_transfer_web","Invalid Agent status "+E.transAgenStatus),logger.log("DEB",E.channel.id,"agent_transfer_web","Agent Ext is invalid"),E.user_ivr_state="TRANSFER_AGENT_INVALID"),l(E.currentState,r))),"TRANSFER_AGENT_ONBREAK"!=E.user_ivr_state&&"TRANSFER_AGENT_NOTREACHABLE"!=E.user_ivr_state&&"TRANSFER_AGENT_INVALID"!=E.user_ivr_state&&"TRANSFER_AGENT_BUSY"!=E.user_ivr_state||0==E.dialedLegDinit&&i())})):logger.log("DEB",E.channel.id,"agent_transfer_web","Agent Extention Received so far ("+E.agent_extention+") & length ("+E.agent_extention.length+") but not (4)")):"CALL_TRANSFER_INIT"==E.user_ivr_state&&(E.transferCallFlag="1"),e.digit){case"*":logger.log("DEB",E.channel.id,"agent_transfer_web","State is "+E.user_ivr_state),"caller_YOUR_HOLD_MUSIC"==E.user_ivr_state?(logger.log("DEB",E.channel.id,"agent_transfer_web","stopping hold music to customer leg."),a&&E.channel&&(E.transHoldMusic="0",logger.log("DEB",E.channel.id,"agent_transfer_web","* stopping playing file ("+E.gmediaFile+")"),a.stop()),_(r,E.channel,E.callBridge),"0"!=(n=function(e){logger.log("IMP",E.channel.id,"agent_transfer_web","Internal Function [getTransferSession]"),logger.log("DEB",E.channel.id,"agent_transfer_web","transferAgentArray length ("+E.transferAgentArray.length+")");for(var n="0",a=0;a<E.transferAgentArray.length;a++){var r=E.transferAgentArray[a];logger.log("DEB",E.channel.id,"agent_transfer_web","Printing values ==> (CallSessionID("+r.Call_SessionID+"), AgentID("+r.Agent_ID+"), AgentGroup("+r.Agent_Group+"), AgentNumber("+r.Agent_Number+")), WhichCallLeg("+r.Which_CallLeg+")"),r.Call_SessionID==e&&(n=r.Call_Session)}return n}(E.origAgentSessionID))&&(logger.log("DEB",E.channel.id,"agent_transfer_web","hangup the Orignal Agent leg.."),c(E.channel,n),E.transferLeg.on("ChannelDtmfReceived",s),E.user_ivr_state="ok_TRANSFER_COMPLETED",logger.log("DEB",E.channel.id,"agent_transfer_web","Channel State Updated to ["+E.user_ivr_state+"]"),n=E.transferLeg.id,logger.log("IMP",E.channel.id,"agent_transfer_web","Internal Function [swapTransferAgents]"),E.origAgentSessionID=n,E.transfreeAgentSessionID="")):(E.transDtmf=e.digit,E.user_ivr_state="TRANSFER_CASE_DTMF");break;case"#":"0"==E.transHoldFlag?(logger.log("DEB",E.channel.id,"agent_transfer_web","[hold_call_reminder] timer initialize.."),E.objReminderCallHoldToAgent=setTimeout(h,1e3*cfg.timer.call_hold_reminder_to_agent_timer),"connected"!=E.transferLegState&&(E.transferLeg=E.dialedLeg),E.transferLeg.snoopChannel({app:cfg.asterisk.stasisApp,channelId:E.transferLeg.id,spy:"out",whisper:"out",appArgs:"SNOOPING_NOTIFY_AGENT_CUST_CALL_ON_HOLD"},function(e,n){e?logger.log("ERR",E.channel.id,"agent_transfer_web","error in snoopChannel: "+e):logger.log("DEB",E.channel.id,"agent_transfer_web","Channel snoopChannel on("+E.transferLeg.id+")")}),"0"!=E.dbMusicOnHoldPrompt?(logger.log("DEB",E.channel.id,"agent_transfer_web","Hold (custom) class "+E.smeID),E.startMohClass=E.smeID):(E.startMohClass="Default",logger.log("DEB",E.channel.id,"agent_transfer_web","Hold (default) class")),E.client.channels.startMoh({channelId:E.channel.id,mohClass:E.startMohClass},function(e){e?logger.log("ERR",E.channel.id,"agent_transfer_web","["+this.state_name+"]: error while HOLD customer: "+e):(logger.log("DEB",E.channel.id,"agent_transfer_web","Customer ON HOLD now..."),E.transHoldFlag="1")})):(logger.log("DEB",E.channel.id,"agent_transfer_web","lets clear the timer objReminderCallHoldToAgent"),clearTimeout(E.objReminderCallHoldToAgent),"1"==E.flagTransferDtmfStarOne&&(logger.log("DEB",E.channel.id,"agent_transfer_web","[timerTransferDtmf] timer initialize.."),E.objTransferDtmfStarOne=setTimeout(f,1e3*cfg.timer.transfer_dtmf_timer),E.timerState="transfer_dtmf_input"),E.transferLeg.snoopChannel({app:cfg.asterisk.stasisApp,channelId:E.transferLeg.id,spy:"out",whisper:"out",appArgs:"SNOOPING_NOTIFY_AGENT_CUST_CALL_UNHOLD"},function(e,n){e?logger.log("ERR",E.channel.id,"agent_transfer_web","error in snoopChannel: "+e):logger.log("DEB",E.channel.id,"agent_transfer_web","Channel snoopChannel on("+E.transferLeg.id+")")}),logger.log("DEB",E.channel.id,"agent_transfer_web","UnHold (default)"),E.client.channels.stopMoh({channelId:E.channel.id},function(e){e?logger.log("ERR",E.channel.id,"agent_transfer_web","["+this.state_name+"]: error while UNHOLD stopMoh customer: "+e):(logger.log("DEB",E.channel.id,"agent_transfer_web","Channel UNHOLD stopMoh now..."),E.transHoldFlag="0")})),"CALL_TRANSFER_INIT"==E.user_ivr_state&&(logger.log("DEB",E.channel.id,"agent_transfer_web","stopping hold music to customer leg."),a&&E.channel&&(logger.log("DEB",E.channel.id,"agent_transfer_web","=========stopping playing file ("+E.gmediaFile+")"),E.client.channels.stopMoh({channelId:E.channel.id},function(e){e?logger.log("ERR",E.channel.id,"agent_transfer_web","============stopMoh error: "+e):(logger.log("DEB",E.channel.id,"agent_transfer_web","============stopMoh success"),E.transHoldFlag="0")})),logger.log("DEB",E.channel.id,"agent_transfer_web","Removing Orignal Agent from the call.."),logger.log("DEB",E.channel.id,"agent_transfer_web","adding Customer to the bridge again.."),_(r,E.channel,E.callBridge),logger.log("DEB",E.channel.id,"agent_transfer_web","hangup the Orignal Agent leg.."),c(E.channel,E.dialedLeg),E.user_ivr_state="rollback_TRANSFER_COMPLETED",logger.log("DEB",E.channel.id,"agent_transfer_web","Channel State Updated to ["+E.user_ivr_state+"]"));break;case"1":"*"==E.transDtmf&&"TRANSFER_CASE_DTMF"==E.user_ivr_state&&(E.transDtmf=E.transDtmf+e.digit,logger.log("DEB",E.channel.id,"agent_transfer_web","group DTMF("+E.transDtmf+")"),"*1"==E.transDtmf?(E.flagTransferDtmfStarOne="1",logger.log("DEB",E.channel.id,"agent_transfer_web","transfer limit ("+E.callTransferRestrictionCount+")"),E.callTransferRestrictionCount<1?("0"==E.transHoldFlag&&("0"!=E.dbMusicOnHoldPrompt?(logger.log("DEB",E.channel.id,"agent_transfer_web","Hold (custom) class "+E.smeID),E.startMohClass=E.smeID):(E.startMohClass="Default",logger.log("DEB",E.channel.id,"agent_transfer_web","Hold (default) class")),E.client.channels.startMoh({channelId:E.channel.id,mohClass:E.startMohClass},function(e){e?logger.log("ERR",E.channel.id,"agent_transfer_web","["+this.state_name+"]: error while HOLD startMoh customer: "+e):(logger.log("DEB",E.channel.id,"agent_transfer_web","Customer ON HOLD startMoh now..."),E.transHoldFlag="1")})),E.transType="UNATTENDANT_CALL_TRANSFER",E.user_ivr_state="req_UNATTENDANT_CALL_TRANSFER",E.agent_extention="",E.whichtransLeg="ORIGNAL_AGENT",logger.log("DEB",E.channel.id,"agent_transfer_web","Call Leg is now ("+E.whichtransLeg+")"),E.transferLeg.snoopChannel({app:cfg.asterisk.stasisApp,channelId:E.transferLeg.id,spy:"out",whisper:"out",appArgs:"SNOOPING_FOR_TRANSFER"},function(e,n){e?logger.log("ERR",E.channel.id,"agent_transfer_web","error in snoopChannel: "+e):logger.log("DEB",E.channel.id,"agent_transfer_web","Channel snoopChannel on("+E.transferLeg.id+")")})):logger.log("DEB",E.channel.id,"agent_transfer_web","transfer limit expired ("+E.callTransferRestrictionCount+")")):logger.log("DEB",E.channel.id,"agent_transfer_web","invalid group DTMF("+E.transDtmf+")"))}}function d(e,n){logger.log("IMP",E.channel.id,"agent_transfer_web","ON Event [on_hangup]"),logger.log("DEB",E.channel.id,"agent_transfer_web","Inside on_hangup"),logger.log("IMP",E.channel.id,"agent_transfer_web","Internal Function [cleanup]"),E.channel.removeListener("ChannelHangupRequest",d),null!=E.agentChannel&&logger.log("DEB",E.channel.id,"agent_transfer_web","removeListener of ChannelDtmfReceived"),logger.log("DEB",E.channel.id,"agent_transfer_web","State-Machine Update to ==> [Event.HANGUP]"),E.state_machine.change_state(Event.HANGUP)}function c(e,n){logger.log("IMP",E.channel.id,"agent_transfer_web","Internal Function [hangupAgentLeg]"),logger.log("DEB",E.channel.id,"agent_transfer_web","Killing Agent Leg session.name("+n.id+") channel.name("+e.name+")"),n.hangup(function(e){})}function _(e,n,a){logger.log("IMP",E.channel.id,"agent_transfer_web","Internal Function [addTransfreeChannelsToBridge]"),logger.log("DEB",E.channel.id,"agent_transfer_web","Adding channel "+e.name+" and transfree channel "+n.name+" to bridge: "+a.id),logger.log("DEB",E.channel.id,"agent_transfer_web","[[[[[[[[[[[[[[[[[[[[[[ transfree channel "+n.id+" added to bridge: "+a.id+"]]]]]]]]]]]]]]]]]]]]]]"),a.addChannel({channel:n.id},function(e){if(e)throw e;E.BRIDGED_TIME=(new Date).getTime();e=parseInt(E.BRIDGED_TIME/1e3);logger.log("DEB",E.channel.id,"agent_transfer_web","Time When bridged:"+e)})}function f(){logger.log("IMP",E.channel.id,"agent_transfer_web","Internal Function [DTMF_Timeout]"),"transfer_dtmf_input"==E.timerState&&"1"==E.flagTransferDtmfStarOne&&(E.noDtmfTransferCount++,E.noDtmfTransferCount<=3?(logger.log("DEB",E.channel.id,"timer [SNOOPING_FOR_TRY_AGAIN_LATER] sending.."),E.transferLeg.snoopChannel({app:cfg.asterisk.stasisApp,channelId:E.transferLeg.id,spy:"out",whisper:"out",appArgs:"SNOOPING_FOR_TRY_AGAIN_LATER"},function(e,n){e?logger.log("ERR",E.channel.id,"agent_transfer_web","error in snoopChannel: "+e):logger.log("DEB",E.channel.id,"agent_transfer_web","Channel snoopChannel on("+E.transferLeg.id+")")})):"0"!=E.transHoldFlag&&("1"==E.flagTransferDtmfStarOne&&(logger.log("DEB",E.channel.id,"agent_transfer_web","[timerTransferDtmf] timer initialize.."),E.objTransferDtmfStarOne=setTimeout(f,1e3*cfg.timer.transfer_dtmf_timer),E.timerState="transfer_dtmf_input"),E.transferLeg.snoopChannel({app:cfg.asterisk.stasisApp,channelId:E.transferLeg.id,spy:"out",whisper:"out",appArgs:"SNOOPING_NOTIFY_AGENT_CUST_CALL_UNHOLD"},function(e,n){e?logger.log("ERR",E.channel.id,"agent_transfer_web","error in snoopChannel: "+e):logger.log("DEB",E.channel.id,"agent_transfer_web","Channel snoopChannel on("+E.transferLeg.id+")")}),E.client.channels.unhold({channelId:E.channel.id},function(e){e?logger.log("ERR",E.channel.id,"agent_transfer_web","["+this.state_name+"]: error while UNHOLD customer: "+e):(logger.log("DEB",E.channel.id,"agent_transfer_web","Channel UNHOLD now..."),E.transHoldFlag="0")})))}function h(){logger.log("IMP",E.channel.id,"agent_transfer_web","Internal Function [hold_call_reminder]"),"0"!=E.transHoldFlag&&(E.transferLeg.snoopChannel({app:cfg.asterisk.stasisApp,channelId:E.transferLeg.id,spy:"out",whisper:"out",appArgs:"SNOOPING_NOTIFY_AGENT_CUST_CALL_ON_HOLD"},function(e,n){e?logger.log("ERR",E.channel.id,"agent_transfer_web","error in snoopChannel: "+e):logger.log("DEB",E.channel.id,"agent_transfer_web","Channel snoopChannel on("+E.transferLeg.id+")")}),logger.log("DEB",E.channel.id,"agent_transfer_web","[hold_call_reminder] timer initialize.."),E.objReminderCallHoldToAgent=setTimeout(h,1e3*cfg.timer.call_hold_reminder_to_agent_timer))}function u(e,n){if(logger.log("IMP",E.channel.id,"agent_transfer_web","ON Event [channelStateChange - "+n.state+"]"),logger.log("DEB",E.channel.id,"agent_transfer_web","State channelStateChange  Name:"+n.name+", State:"+n.state),"Up"==n.state){E.transferLegInit=!0,logger.log("DEB",E.channel.id,"agent_transfer_web","set transferLegInit true"),agentProcessor.updateLiveCallTransfer(E,"1"),E.TransferAgentConnectedStartTime=dateTime.getAgentDateTime(),E.TransferAgentRingingEndTime=dateTime.getAgentDateTime(),E.TransferAgentRingingDuration=dateTime.calculateDuration(E.TransferAgentRingingStartTime,E.TransferAgentRingingEndTime),logger.log("DEB",E.channel.id,"agent_transfer_web","AgentRingingDuration("+E.TransferAgentRingingDuration+")"),logger.log("IMP",E.channel.id,"agent_transfer_web","transferLegState Changed ["+E.transferLegState+" => connected]"),E.transferLegState="connected",logger.log("DEB",E.channel.id,"agent_transfer_web","updateTransferAgent to AnswerFlag(answer-0)");var a=n.id,r="1",t="0";logger.log("IMP",E.channel.id,"agent_transfer_web","Internal Function [updateTransferAgent]"),logger.log("DEB",E.channel.id,"agent_transfer_web","transferAgentArray length ("+E.transferAgentArray.length+")");for(var g=0;g<E.transferAgentArray.length;g++){var l=E.transferAgentArray[g];l.Call_SessionID==a&&(logger.log("DEB",E.channel.id,"agent_transfer_web","Agent "+l.Which_CallLeg+" from transferAgentArray detail (CallSessionID("+l.Call_SessionID+"), AgentID("+l.Agent_ID+"), AgentGroup("+l.Agent_Group+"), AgentNumber("+l.Agent_Number+") AnswerFlag("+l.Answer_Flag+"))"),"1"==r)&&(logger.log("DEB",E.channel.id,"agent_transfer_web","Update the AnswerFlag to ("+t+")"),l.Answer_Flag=t)}E.transAgenAnswerStatus="0"}else"Ringing"==n.state?(E.TransferAgentRingingStartTime=dateTime.getAgentDateTime(),logger.log("DEB",E.channel.id,"agent_transfer_web","Ringing:  "+n.id),logger.log("IMP",E.channel.id,"agent_transfer_web","transferLegState Changed ["+E.transferLegState+" => ringing]"),E.transferLegState="ringing"):logger.log("DEB",E.channel.id,"agent_transfer_web",n.state+":  "+n.id)}logger.log("DEB",E.channel.id,"agent_transfer_web","Entering agent_transfer_state: agent_transfer_state"),E.ringTime=0,E.ccEndNode="CCG_"+E.allocated_agent+"_"+E.ringTime+"_"+E.dialStatus,E.dialedLeg.on("ChannelDtmfReceived",s),"req_ATTENDANT_CALL_TRANSFER"==E.user_ivr_state||"req_UNATTENDANT_CALL_TRANSFER"==E.user_ivr_state?(E.agent_extention="",E.transferLeg=E.dialedLeg,E.noDtmfTransferCount++,E.dialedLeg.snoopChannel({app:cfg.asterisk.stasisApp,channelId:E.dialedLeg.id,spy:"out",whisper:"out",appArgs:"SNOOPING_FOR_TRANSFER"},function(e,n){e?logger.log("ERR",E.channel.id,"agent_transfer_web","error in snoopChannel: "+e):logger.log("DEB",E.channel.id,"agent_transfer_web","Channel snoopChannel on("+E.dialedLeg.id+")")})):(logger.log("DEB",E.channel.id,"agent_transfer_web","invalid group ?? DTMF("+E.transDtmf+")"),"HOLD"==E.webTransferEventType?(logger.log("DEB",E.channel.id,"agent_transfer_web","webTransferEventType (HOLD)"),logger.log("IMP",E.channel.id,"agent_transfer_web","Internal Function [hold_this_call]"),"0"==E.transHoldFlag?(logger.log("DEB",E.channel.id,"agent_transfer_web","[hold_call_reminder] timer initialize.."),E.objReminderCallHoldToAgent=setTimeout(h,1e3*cfg.timer.call_hold_reminder_to_agent_timer),"connected"!=E.transferLegState&&(E.transferLeg=E.dialedLeg),E.transferLeg.snoopChannel({app:cfg.asterisk.stasisApp,channelId:E.transferLeg.id,spy:"out",whisper:"out",appArgs:"SNOOPING_NOTIFY_AGENT_CUST_CALL_ON_HOLD"},function(e,n){e?logger.log("ERR",E.channel.id,"agent_transfer_web","error in snoopChannel: "+e):logger.log("DEB",E.channel.id,"agent_transfer_web","Channel snoopChannel on("+E.transferLeg.id+")")}),"0"!=E.dbMusicOnHoldPrompt?(logger.log("DEB",E.channel.id,"agent_transfer_web","Hold (custom) class "+E.smeID),E.startMohClass=E.smeID):(E.startMohClass="Default",logger.log("DEB",E.channel.id,"agent_transfer_web","Hold (default) class")),E.client.channels.startMoh({channelId:E.channel.id,mohClass:E.startMohClass},function(e){e?logger.log("ERR",E.channel.id,"agent_transfer_web","["+this.state_name+"]: error while HOLD customer: "+e):(logger.log("DEB",E.channel.id,"agent_transfer_web","Customer ON HOLD now..."),E.transHoldFlag="1")})):logger.log("DEB",E.channel.id,"agent_transfer_web","customer already on nhold")):"UNHOLD"==E.webTransferEventType?(logger.log("DEB",E.channel.id,"agent_transfer_web","webTransferEventType (UNHOLD)"),logger.log("IMP",E.channel.id,"agent_transfer_web","Internal Function [unhold_this_call]"),"1"==E.transHoldFlag?(logger.log("DEB",E.channel.id,"agent_transfer_web","lets clear the timer objReminderCallHoldToAgent"),clearTimeout(E.objReminderCallHoldToAgent),"1"==E.flagTransferDtmfStarOne&&(logger.log("DEB",E.channel.id,"agent_transfer_web","[timerTransferDtmf] timer initialize.."),E.objTransferDtmfStarOne=setTimeout(f,1e3*cfg.timer.transfer_dtmf_timer),E.timerState="transfer_dtmf_input"),E.transferLeg.snoopChannel({app:cfg.asterisk.stasisApp,channelId:E.transferLeg.id,spy:"out",whisper:"out",appArgs:"SNOOPING_NOTIFY_AGENT_CUST_CALL_UNHOLD"},function(e,n){e?logger.log("ERR",E.channel.id,"agent_transfer_web","error in snoopChannel: "+e):logger.log("DEB",E.channel.id,"agent_transfer_web","Channel snoopChannel on("+E.transferLeg.id+")")}),logger.log("DEB",E.channel.id,"agent_transfer_web","UnHold (default)"),E.client.channels.stopMoh({channelId:E.channel.id},function(e){e?logger.log("ERR",E.channel.id,"agent_transfer_web","["+this.state_name+"]: error while UNHOLD stopMoh customer: "+e):(logger.log("DEB",E.channel.id,"agent_transfer_web","Channel UNHOLD stopMoh now..."),E.transHoldFlag="0")})):logger.log("DEB",E.channel.id,"agent_transfer_web","customer already on unhold")):"BLIND_TRANSFER"==E.webTransferEventType?(logger.log("DEB",E.channel.id,"agent_transfer_web","webTransferEventType (BLIND_TRANSFER)"),r=E.channel,n="",t=E.client.Channel(),logger.log("IMP",E.channel.id,"agent_transfer_web","Internal Function [transfer]"),logger.log("DEB",E.channel.id,"agent_transfer_web","for testing only-------transferee:("+t+"), transferee.id:"+t.id),logger.log("DEB",E.channel.id,"agent_transfer_web","[[[[[[[[[[[[[[[[[[[[[[[[[[[ Transferee Channel created:"+t.id+"]]]]]]]]]]]]]]]]]]]]]]]]]]]"),logger.log("DEB",E.channel.id,"agent_transfer_web","Agent "+E.transAgentMobile+" is safe to patch a call"),logger.log("DEB",E.channel.id,"agent_transfer_web","###################### Dial Status is : "+E.dialStatus),logger.log("DEB",E.channel.id,"agent_transfer_web","###################### cc EndNode is : "+E.ccEndNode),E.allocated_agent=E.transAgentMobile,logger.log("DEB",E.channel.id,"agent_transfer_web","Will Dial the allocated Agent:"+E.transAgentMobile),logger.log("DEB",E.channel.id,"agent_transfer_web","and bridge the customer number:"+E.channel.caller.number),E.channel.caller.number,E.transAgentMobile,logger.log("DEB",E.channel.id,"agent_transfer_web","and bridge the customer number:"+E.channel.caller.number),"1"==E.smemasking?(E.channel.caller.number,Math.floor(9e5*Math.random()+1e5),n=E.called_number,logger.log("DEB",E.channel.id,"agent_transfer_web","Masking [ON] setting CLI as ["+n+"]")):(n=E.called_number,logger.log("DEB",E.channel.id,"agent_transfer_web","Masking [OFF] setting CLI as ["+n+"]")),"0"==E.transLegFlag?(E.orignalAgentHoldMusic="1",l(E.currentState,E.dialedLeg)):(E.orignalAgentHoldMusic="1",l(E.currentState,E.transferLeg)),"BLIND_TRANSFER"==E.transType&&_(r,E.channel,E.callBridge),transfer(E.channel),E.transferLeg=t,logger.log("IMP",E.channel.id,"agent_transfer_web","transferLegState Changed ["+E.transferLegState+" => ready]"),E.transferLegState="ready",E.TransferAgentStartTime=dateTime.getAgentDateTime(),logger.log("DEB",E.channel.id,"agent_transfer_web","TransferAgentStartTime ["+E.TransferAgentStartTime+"]"),E.transfreeAgentSessionID=t.id,e="SIP/"+E.transAgentMobile+"@"+cfg.asterisk.gw_ipaddr_port,n="ed_wringg <"+n+">",logger.log("DEB",E.channel.id,"agent_transfer_web","Current State ["+E.currentState+"] Update to ==> [originating]"),logger.log("DEB",E.channel.id,"agent_transfer_web","callerID("+n+"), endPoint("+e+")"),E.currentState="originating",E.originateTime=(new Date).getTime(),logger.log("DEB",E.channel.id,"agent_transfer_web","Call Originate Time :  "+E.originateTime),E.waitingTime=(E.originateTime-E.startTime)/1e3,logger.log("DEB",E.channel.id,"agent_transfer_web"," Waiting  time : [",E.waitingTime,"]"),t.on("StasisEnd",function(e,n){var a;logger.log("IMP",E.channel.id,"agent_transfer_web","ON Event [StasisEnd - transferee.on]"),E.transferLegDinit=!0,logger.log("DEB",E.channel.id,"agent_transfer_web","set transferLegDinit true"),"none"==E.calldisconnectedBy&&(E.calldisconnectedBy="agent_disconnect"),logger.log("DEB",E.channel.id,"agent_transfer_web"," channel inside StasisEnd  "+n.id),logger.log("DEB",E.channel.id,"agent_transfer_web"," Inside channel StasisEnd function "),"1"==E.orignalAgentHoldMusic&&"0"==E.transLegFlag?(logger.log("DEB",E.channel.id,"agent_transfer_web","stop ringing to orignal agent dialer(StasisEnd)"),E.channel&&(E.orignalAgentPlayback.stop(),E.orignalAgentHoldMusic)):"1"==E.orignalAgentHoldMusic&&"1"==E.transLegFlag?(logger.log("DEB",E.channel.id,"agent_transfer_web","stop ringing to orignal agent transfree(StasisEnd)"),E.channel&&(E.orignalAgentPlayback.stop(),E.orignalAgentHoldMusic)):logger.log("DEB",E.channel.id,"agent_transfer_web","nothing to stop(StasisEnd)"),n=n,a=t,logger.log("IMP",E.channel.id,"agent_transfer_web","Internal Function [hangupDialed]"),logger.log("DEB",E.channel.id,"agent_transfer_web","Channel "+n.name+" left our application, hanging up session channel: "+a.name),a.hangup(function(e){}),0==E.dialedLegDinit&&i()}),t.on("ChannelDestroyed",function(e,n){var a,r,t,g,l;logger.log("IMP",E.channel.id,"agent_transfer_web","ON Event [ChannelDestroyed - transferee.on]"),"none"===E.calldisconnectedBy&&(E.calldisconnectedBy="agent_disconnect"),logger.log("DEB",E.channel.id,"agent_transfer_web","Inside transferee ChannelDestroyed, Current State ["+E.currentState+"]"),E.transferLegDinit=!0,logger.log("DEB",E.channel.id,"agent_transfer_web","set transferLegDinit true"),logger.log("DEB",E.channel.id,"agent_transfer_web","TransferAgentRingingDuration is("+E.TransferAgentRingingDuration+")"),logger.log("DEB",E.channel.id,"agent_transfer_web","TransferAgentConnectedStartTime is("+E.TransferAgentConnectedStartTime+")"),(E.TransferAgentRingingDuration<="0"||isNaN(E.TransferAgentRingingDuration))&&(E.TransferAgentRingingEndTime=dateTime.getAgentDateTime(),E.TransferAgentRingingDuration=dateTime.calculateDuration(E.TransferAgentRingingStartTime,E.TransferAgentRingingEndTime)),0!=E.TransferAgentConnectedStartTime?(E.TransferAgentConnectedEndTime=dateTime.getAgentDateTime(),E.TransferAgentConnectedDuration=dateTime.calculateDuration(E.TransferAgentConnectedStartTime,E.TransferAgentConnectedEndTime)):E.TransferAgentConnectedDuration="0",logger.log("DEB",E.channel.id,"agent_transfer_web","||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||"),logger.log("DEB",E.channel.id,"agent_transfer_web","TransferAgentRingingDuration("+E.TransferAgentRingingDuration+")"),logger.log("DEB",E.channel.id,"agent_transfer_web","TransferAgentConnectedDuration("+E.TransferAgentConnectedDuration+")"),logger.log("DEB",E.channel.id,"agent_transfer_web","||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||"),logger.log("DEB",E.channel.id,"agent_transfer_web","Agent call disconneced, Reason_Cause["+e.cause+"] Cause_Msg["+e.cause_txt+"]"),E.agentCallResponseCode=e.cause,E.agentCallResponseMsg=e.cause_txt,E.callInfo="transfer",E.transLegFlag="0",E.transferCallFlag="1",E.origAgentSessionID=E.transferLeg.id,E.transfreeAgentSessionID="",logger.log("DEB",E.channel.id,"agent_transfer_web","transferLegState("+E.transferLegState+") && transAgentWriteCdrFlag("+E.transAgentWriteCdrFlag+")"),"init"!=E.transferLegState&&1!=E.transAgentWriteCdrFlag?(E.callRouteReason="transfer",logger.log("DEB",E.channel.id,"agent_transfer_web","callRouteReason:"+E.callRouteReason),logger.log("DEB",E.channel.id,"agent_transfer_web","logAgentCdrTransfer generating agent cdr for transfer agent"),agentProcessor.logAgentCdrTransfer(E),logger.log("DEB",E.channel.id,"agent_transfer_web","freeTransferAgent marking transfer agent free"),agentProcessor.freeTransferAgent(E),E.transAgentWriteCdrFlag=!0):logger.log("DEB",E.channel.id,"agent_transfer_web","already, made transfer agent free and write transfer agent cdr"),"1"==E.transHoldFlag?("1"==E.orignalAgentHoldMusic&&(logger.log("DEB",E.channel.id,"agent_transfer_web","stop ringing to orignal agent dialer(StasisEnd)"),E.channel)&&(E.orignalAgentPlayback.stop(),E.orignalAgentHoldMusic),E.agentDialed.snoopChannel({app:cfg.asterisk.stasisApp,channelId:E.agentDialed.id,spy:"out",whisper:"out",appArgs:"SNOOPING_NOTIFY_AGENT_CUST_CALL_UNHOLD"},function(e,n){e?logger.log("ERR",E.channel.id,"agent_transfer_web","error in snoopChannel: "+e):logger.log("DEB",E.channel.id,"agent_transfer_web","Channel snoopChannel on("+E.agentDialed.id+")")}),logger.log("DEB",E.channel.id,"agent_transfer_web","lets clear the timer objReminderCallHoldToAgent"),clearTimeout(E.objReminderCallHoldToAgent),logger.log("DEB",E.channel.id,"agent_transfer_web","UnHold (default)"),E.client.channels.stopMoh({channelId:E.channel.id},function(e){e?logger.log("ERR",E.channel.id,"agent_transfer_web","["+this.state_name+"]: error while UNHOLD stopMoh customer: "+e):(logger.log("DEB",E.channel.id,"agent_transfer_web","Channel UNHOLD now..."),E.transHoldFlag="0")})):logger.log("DEB",E.channel.id,"agent_transfer_web","call not on hold..."),logger.log("DEB",E.channel.id,"agent_transfer_web","transferLegState("+E.transferLegState+") && transAgentWriteCdrFlag("+E.transAgentWriteCdrFlag+")"),"init"!=E.transferLegState&&1!=E.transAgentWriteCdrFlag?(E.callRouteReason="transfer",logger.log("DEB",E.channel.id,"agent_transfer_web","callRouteReason:"+E.callRouteReason),logger.log("DEB",E.channel.id,"agent_transfer_web","logAgentCdrTransfer generating agent cdr for transfer agent"),agentProcessor.logAgentCdrTransfer(E),logger.log("DEB",E.channel.id,"agent_transfer_web","freeTransferAgent marking transfer agent free"),agentProcessor.freeTransferAgent(E),E.transAgentWriteCdrFlag=!0):logger.log("DEB",E.channel.id,"agent_transfer_web","already, made transfer agent free and write transfer agent cdr"),"1"==E.callRecordingStatus?"mp3"==cfg.system.recording_type?(logger.log("DEB",E.channel.id,"agent_transfer_web","active recording, need to stop!"),console.log("Accepted recording",E.callRecordedFile),E.client.recordings.stop({recordingName:E.callRecordedFile},function(e){}),r=E.callRecordedFile+".wav",t="/var/spool/asterisk/recording/"+E.callRecordedFile+".wav",g=cfg.media.rec_dir+"/"+E.callRecordedFile+".wav",a=cfg.media.rec_dir+"/"+E.callRecordedFile+".mp3",l=cfg.media.rec_dir+"/"+E.smeID,fs.existsSync(l)||fs.mkdirSync(l),E.callRecordedFile=t,mv(t,g,function(e){if(e)throw e;logger.log("DEB",E.channel.id,"agent_transfer_web","RECORDING Successfully Move from: ("+t+") to: ("+g+")"),E.callRecordedFile=g,E.s3RecordedFile=a,E.s3RecordedFileWav=g,logger.log("DEB",E.channel.id,"agent_transfer_web","storing recording in DB.."),E.callDirection="INCOMING";e=`ffmpeg -i ${E.s3RecordedFileWav} -codec:a libmp3lame -qscale:a 2 `+E.s3RecordedFile;exec(e,(e,n,a)=>{e?(logger.log("ERR",E.channel.id,"agent_transfer_web","ENCODING failed, store failed recording. SaveS3FailedRecordingData error"+e),logger.log("ERR",E.channel.id,"agent_transfer_web","file encoded failed to mp3 "+E.s3RecordedFile+" from wav "+E.s3RecordedFileWav),agentProcessor.SaveS3FailedRecordingData(E)):(logger.log("DEB",E.channel.id,"agent_transfer_web","file encoded to mp3 "+E.s3RecordedFile+" from wav "+E.s3RecordedFileWav),null!=E.s3RecordedFile&&0!=E.s3RecordedFile.length&&awsS3.s3Upload(E,E.smeID,E.s3RecordedFile,E.s3RecordedFile,function(e,n){e?(logger.log("ERR",E.channel.id,"agent_transfer_web","UPLOAD s3Upload failed, store for retry"),logger.log("DEB",E.channel.id,"agent_transfer_web","UPLOAD to s3 failed, store failed recording. SaveS3FailedRecordingData"),agentProcessor.SaveS3FailedRecordingData(E)):(logger.log("DEB",E.channel.id,"agent_transfer_web","UPLOAD S3 s3Upload Received: "+n.Location),console.log(n),E.s3uploadedUrl=n.Location,E.callDirection="INCOMING",logger.log("DEB",E.channel.id,"agent_transfer_web","calling agentProcessor.SaveS3RecordingData "),agentProcessor.SaveS3RecordingData(E),fs.unlink(E.s3RecordedFileWav,e=>{e?(logger.log("ERR",E.channel.id,"agent_transfer_web","DELETE error while deleting wav recording file("+E.s3RecordedFileWav+"):",e),console.error(e)):logger.log("DEB",E.channel.id,"agent_transfer_web","DELETE successfully deleting wav recording file"+E.s3RecordedFileWav)}),fs.unlink(E.s3RecordedFile,e=>{e?(logger.log("ERR",E.channel.id,"agent_transfer_web","DELETE error while deleting mp3 recording file("+E.s3RecordedFile+"):",e),console.error(e)):logger.log("DEB",E.channel.id,"agent_transfer_web","DELETE successfully deleting mp3 recording file"+E.s3RecordedFile)}))}))})})):"wav"==cfg.system.recording_type?(logger.log("DEB",E.channel.id,"agent_transfer_web","active recording, need to stop!"),console.log("Accepted recording",E.callRecordedFile),E.client.recordings.stop({recordingName:E.callRecordedFile},function(e){}),r=E.callRecordedFile+".wav",t="/var/spool/asterisk/recording/"+E.callRecordedFile+".wav",g=cfg.media.rec_dir+"/"+E.callRecordedFile+".wav",l=cfg.media.rec_dir+"/"+E.smeID,fs.existsSync(l)||fs.mkdirSync(l),E.callRecordedFile=t,mv(t,g,function(e){if(e)throw e;logger.log("DEB",E.channel.id,"agent_transfer_web","RECORDING Successfully Move from: ("+t+") to: ("+g+")"),E.callRecordedFile=g,E.s3RecordedFile=g,logger.log("DEB",E.channel.id,"agent_transfer_web","storing recording in DB.."),E.callDirection="INCOMING",null!=E.s3RecordedFile&&0!=E.s3RecordedFile.length&&awsS3.s3Upload(E,E.smeID,E.s3RecordedFile,r,function(e,n){e?logger.log("ERR",E.channel.id,"agent_transfer_web","s3Upload failed"):(logger.log("DEB",E.channel.id,"agent_transfer_web","s3Upload Received: "+n.Location),console.log(n),E.s3uploadedUrl=n.Location,logger.log("DEB",E.channel.id,"agent_transfer_web","calling agentProcessor.SaveS3RecordingData "),agentProcessor.SaveS3RecordingData(E),fs.unlink(E.s3RecordedFile,e=>{e?(logger.log("ERR",E.channel.id,"agent_transfer_web","DELETE error while deleting wav recording file("+E.s3RecordedFile+"):",e),console.error(e)):logger.log("DEB",E.channel.id,"agent_transfer_web","DELETE successfully deleting wav recording file"+E.s3RecordedFile)}))})})):logger.log("ERR",E.channel.id,"agent_transfer_web","invalid recording format mentioned in cfg file. ("+cfg.system.recording_type+")"):logger.log("DEB",E.channel.id,"agent_transfer_web","No active recording!"),logger.log("DEB",E.channel.id,"agent_transfer_web","-----------------------------------$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$"),logger.log("DEB",E.channel.id,"agent_transfer_web","mainLegDinit("+E.mainLegDinit+"), dialedLegDinit("+E.dialedLegDinit+"), transferLegDinit("+E.transferLegDinit+")"),1==E.transferLegDinit&&1==E.dialedLegDinit&&(logger.log("DEB",E.channel.id,"agent_transfer_web","transferLeg.hangup from main...."),E.mainLeg.hangup(function(e){e?logger.log("ERR",E.channel.id,"agent_transfer_web","Error while hangup main leg."+e):logger.log("DEB",E.channel.id,"agent_transfer_web","success while hangup main leg.")})),0==E.dialedLegDinit&&i()}),g="channel:"+E.channel.id,logger.log("DEB",E.channel.id,"agent_transfer_web","stasisApp app name: "+cfg.asterisk.stasisApp),E.client.applications.subscribe({applicationName:cfg.asterisk.stasisApp,eventSource:g},function(e,n){e?logger.log("ERR",E.channel.id,"agent_transfer_web","Error while subscribing for channel!!"):logger.log("DEB",E.channel.id,"agent_transfer_web","Subscribed for channel successfully")}),t.on("Ring",function(e,n){logger.log("IMP",E.channel.id,"agent_transfer_web","ON Event [Ring - transferee.on]"),logger.log("DEB",E.channel.id,"agent_transfer_web","Ringing!!!")}),t.on("ChannelHold",function(e,n){logger.log("IMP",E.channel.id,"agent_transfer_web","ON Event [ChannelHold - transferee.on]")}),t.on("ChannelUnhold",function(e,n){logger.log("IMP",E.channel.id,"agent_transfer_web","ON Event [ChannelUnhold - transferee.on]")}),t.on("StasisStart",function(e,n){logger.log("IMP",E.channel.id,"agent_transfer_web","ON Event [StasisStart - transferee.on]"),logger.log("DEB",E.channel.id,"agent_transfer_web","Stasis Started for transferee:  "+n.id),logger.log("DEB",E.channel.id,"agent_transfer_web","Stasis Started time : "+E.startTime),logger.log("IMP",E.channel.id,"agent_transfer_web","transferLegState Changed ["+E.transferLegState+" => connected]"),E.transferLegState="connected",E.transferLegInit=!0,logger.log("DEB",E.channel.id,"agent_transfer_web","set transferLegInit true"),E.TransferAgentConnectedEndTime=dateTime.getAgentDateTime(),E.TransferAgentConnectedDuration=dateTime.calculateDuration(E.TransferAgentConnectedStartTime,E.TransferAgentConnectedEndTime),logger.log("DEB",E.channel.id,"agent_transfer_web","TransferAgentConnectedDuration("+E.TransferAgentConnectedDuration+")"),E.transferCallFlag="1",clearTimeout(E.objTransferDtmfStarOne),E.flagTransferDtmfStarOne="0",E.callTransferRestrictionCount++,logger.log("DEB",E.channel.id,"agent_transfer_web","on Stasis callTransferRestrictionCount : "+E.callTransferRestrictionCount),"1"==E.transHoldFlag&&(logger.log("DEB",E.channel.id,"agent_transfer_web","UnHold (default)"),"1"==E.orignalAgentHoldMusic&&(logger.log("DEB",E.channel.id,"agent_transfer_web","stop ringing to orignal agent dialer(StasisEnd)"),E.channel)&&(E.orignalAgentPlayback.stop(),E.orignalAgentHoldMusic),E.client.channels.stopMoh({channelId:E.channel.id},function(e){e?logger.log("ERR",E.channel.id,"agent_transfer_web","["+this.state_name+"]: error while UNHOLD stopMoh customer: "+e):(logger.log("DEB",E.channel.id,"agent_transfer_web","Channel UNHOLD stopMoh now..."),E.transHoldFlag="0")})),"BLIND_TRANSFER"==E.webTransferEventType&&(c(E.channel,E.dialedLeg),E.transferLeg=n,E.transferLeg.on("ChannelDtmfReceived",s),E.user_ivr_state="ok_TRANSFER_COMPLETED",logger.log("DEB",E.channel.id,"agent_transfer_web","Channel State Updated to ["+E.user_ivr_state+"]"),logger.log("DEB",E.channel.id,"agent_transfer_web","stopping hold music to customer leg."),a)&&(E.channel&&(E.transHoldMusic="0",logger.log("DEB",E.channel.id,"agent_transfer_web","stopping playing file ("+E.gmediaFile+")")),E.client.channels.stopMoh({channelId:E.channel.id},function(e){e?logger.log("ERR",E.channel.id,"agent_transfer_web","2================stopMoh error: "+e):(logger.log("DEB",E.channel.id,"agent_transfer_web","2================stopMoh success"),E.transHoldFlag="0")})),"1"==E.orignalAgentHoldMusic&&"0"==E.transLegFlag?(logger.log("DEB",E.channel.id,"agent_transfer_web","stop ringing to orignal agent dialer(StasisStart)"),E.channel&&(E.orignalAgentPlayback.stop(),E.orignalAgentHoldMusic)):"1"==E.orignalAgentHoldMusic&&"1"==E.transLegFlag?(logger.log("DEB",E.channel.id,"agent_transfer_web","stop ringing to orignal agent transfree(StasisStart)"),E.channel&&(E.orignalAgentPlayback.stop(),E.orignalAgentHoldMusic)):logger.log("DEB",E.channel.id,"agent_transfer_web","nothing to stop(StasisStart)"),_(r,n,E.callBridge),logger.log("DEB",E.channel.id,"agent_transfer_web","hangupAgentLeg because transfer is successfull")}),t.on("ChannelHangupRequest",d),t.on("PlaybackFinished",o),t.on("ChannelStateChange",u),logger.log("IMP",E.channel.id,"agent_transfer_web","transferLegState Changed ["+E.transferLegState+" => originating]"),E.transferLegState="originating",E.transferLegInit=!0,logger.log("DEB",E.channel.id,"agent_transfer_web","set transferLegInit true"),E.transferLegDinit=!1,t.originate({endpoint:e,app:cfg.asterisk.stasisApp,appArgs:"AGENT_CH",callerId:n},function(e,n){e?logger.log("ERR",E.channel.id,"agent_transfer_web","Error in dialing("+e+")"):logger.log("IMP",E.channel.id,"agent_transfer_web","Init [transferee.originate]")})):logger.log("DEB",E.channel.id,"agent_transfer_web","invalid webTransferEventType ("+E.webTransferEventType+")"))}}module.exports=AgentOutgoingCall;