var Event=require("./events"),cfg=require("../../pbx_config"),pbx_db=require("./pbx_db"),pbx_api=require("./api/pbx_api"),pbx_logger=require("./logger/pbx_logger"),agent_processor=require("./agent_processor"),express=require("express"),dt=require("./common/datetime"),awsS3=require("./s3/awsS3"),ari=require("ari-client"),util=require("util"),path=require("path"),fs=require("fs"),mv=require("mv");const Lame=require("node-lame").Lame;var logger=new pbx_logger,dateTime=new dt,agentProcessor=new agent_processor,awsS3=new awsS3,dbOutput="",dbSMEid="",api=new pbx_api;function AgentClick2Call(r){this.state_name="agent_c2c_state",logger.log("DEB",r.channel.id,"agent_c2c","Current State ["+r.currentState+"] Update to ==> [dialing]"),r.currentState="dialing",r.dialStatus="NOANSWER";r.totalHoldDuration=0,this.enter=function(){var e;new pbx_db,r.callcdrMode="22",r.callDirection="OUTGOING",r.callDirectionStatus="1",logger.log("IMP",r.channel.id,"agent_c2c","Entering agent_c2c_state: agent_c2c_state"),r.channel.on("ChannelHangupRequest",a),r.client.on("PlaybackFinished",function e(n){logger.log("IMP",r.channel.id,"agent_c2c","on_playback_finished");"WAITING_AGENT_C2C_DATA"==r.user_ivr_state?(r.client.removeListener("PlaybackFinished",e),r.client.removeListener("ChannelHangupRequest",a),logger.log("IMP",r.channel.id,"agent_c2c","FSM State Changed [TO => AGENT_C2C]"),r.state_machine.change_state(Event.AGENT_C2C)):"AGENT_C2C_TRY_LATER"==r.user_ivr_state?(logger.log("IMP",r.channel.id,"agent_c2c","AGENT_C2C_TRY_LATER so let kill the agent app side."),r.client.removeListener("PlaybackFinished",e),o(r.channel,r.agentChannel),setTimeout(o,1100,r.channel,r.agentChannel)):"PLAY_BUSSY"!=r.user_ivr_state&&"PLAY_BUSSY_SWITCHEDOFF"!=r.user_ivr_state&&"PLAY_SWITCHEDOFF_NOTRESPONDING"!=r.user_ivr_state&&"PLAY_NOT_AVAILABLE"!=r.user_ivr_state||(logger.log("DEB",r.channel.id,"agent_c2c",r.user_ivr_state+" so let kill the agent app side."),r.client.removeListener("PlaybackFinished",e),o(r.channel,r.agentChannel),setTimeout(o,1100,r.channel,r.agentChannel))});function g(){logger.log("IMP",r.channel.id,"agent_c2c","Inside start_playback"),"PLAY_NOT_AVAILABLE"==r.user_ivr_state?(logger.log("IMP",r.channel.id,"agent_c2c","IVR STATE (PLAY_NOT_AVAILABLE)"),r.mediafileName=cfg.media.dir+"/"+cfg.outgoing.not_available+"-e",logger.log("IMP",r.channel.id,"agent_c2c","Play ("+r.mediafileName+")"),current_sound="sound:"+r.mediafileName,logger.log("IMP",r.channel.id,"agent_c2c","Going to play media["+current_sound+"]"),e=null,e=r.client.Playback(),logger.log("DEB",r.channel.id,"agent_c2c","channel:",r.channel.caller),r.channel.play({media:current_sound},e,function(e,n){logger.log("ERR",r.channel.id,"agent_c2c","...In Playback Handler:"+e)})):"PLAY_BUSSY"==r.user_ivr_state?(logger.log("IMP",r.channel.id,"agent_c2c","IVR STATE (PLAY_BUSSY)"),r.mediafileName=cfg.media.dir+"/"+cfg.outgoing.number_is_bussy+"-e",logger.log("IMP",r.channel.id,"agent_c2c","Play ("+r.mediafileName+")"),current_sound="sound:"+r.mediafileName,logger.log("IMP",r.channel.id,"agent_c2c","Going to play media["+current_sound+"]"),e=null,e=r.client.Playback(),logger.log("DEB",r.channel.id,"agent_c2c","channel:",r.channel.caller),r.channel.play({media:current_sound},e,function(e,n){logger.log("ERR",r.channel.id,"agent_c2c","...In Playback Handler:"+e)})):"PLAY_BUSSY_SWITCHEDOFF"==r.user_ivr_state?(logger.log("IMP",r.channel.id,"agent_c2c","IVR STATE (PLAY_BUSSY_SWITCHEDOFF)"),r.mediafileName=cfg.media.dir+"/"+cfg.outgoing.busy_or_switchedoff+"-e",logger.log("IMP",r.channel.id,"agent_c2c","Play ("+r.mediafileName+")"),current_sound="sound:"+r.mediafileName,logger.log("IMP",r.channel.id,"agent_c2c","Going to play media["+current_sound+"]"),e=null,e=r.client.Playback(),logger.log("DEB",r.channel.id,"agent_c2c","channel:",r.channel.caller),r.channel.play({media:current_sound},e,function(e,n){logger.log("ERR",r.channel.id,"agent_c2c","...In Playback Handler:"+e)})):"PLAY_SWITCHEDOFF_NOTRESPONDING"==r.user_ivr_state?(logger.log("IMP",r.channel.id,"agent_c2c","IVR STATE (PLAY_SWITCHEDOFF_NOTRESPONDING)"),r.mediafileName=cfg.media.dir+"/"+cfg.outgoing.notresponding_or_switchedoff+"-e",logger.log("IMP",r.channel.id,"agent_c2c","Play ("+r.mediafileName+")"),current_sound="sound:"+r.mediafileName,logger.log("IMP",r.channel.id,"agent_c2c","Going to play media["+current_sound+"]"),e=null,e=r.client.Playback(),logger.log("DEB",r.channel.id,"agent_c2c","channel:",r.channel.caller),r.channel.play({media:current_sound},e,function(e,n){logger.log("ERR",r.channel.id,"agent_c2c","...In Playback Handler:"+e)})):"WAITING_AGENT_C2C_DATA"==r.user_ivr_state?(logger.log("IMP",r.channel.id,"agent_c2c","IVR STATE (WAITING_AGENT_C2C_DATA)"),r.mediafileName=cfg.media.dir+"/"+cfg.outgoing.agent_wait_fetching_data+"-e",logger.log("IMP",r.channel.id,"agent_c2c","Play ("+r.mediafileName+")"),current_sound="sound:"+r.mediafileName,logger.log("IMP",r.channel.id,"agent_c2c","Going to play media["+current_sound+"]"),e=null,e=r.client.Playback(),logger.log("DEB",r.channel.id,"agent_c2c","channel:",r.channel.caller),r.channel.play({media:current_sound},e,function(e,n){logger.log("ERR",r.channel.id,"agent_c2c","...In Playback Handler:"+e)})):"AGENT_C2C_TRY_LATER"==r.user_ivr_state?(logger.log("IMP",r.channel.id,"agent_c2c","IVR STATE (AGENT_C2C_TRY_LATER)"),r.mediafileName=cfg.media.dir+"/"+cfg.outgoing.agent_try_after_sometime+"-e",logger.log("IMP",r.channel.id,"agent_c2c","Play ("+r.mediafileName+")"),current_sound="sound:"+r.mediafileName,logger.log("IMP",r.channel.id,"agent_c2c","Going to play media["+current_sound+"]"),e=null,e=r.client.Playback(),logger.log("DEB",r.channel.id,"agent_c2c","channel:",r.channel.caller),r.channel.play({media:current_sound},e,function(e,n){logger.log("ERR",r.channel.id,"agent_c2c","...In Playback Handler:"+e)})):logger.log("ERR",r.channel.id,"agent_c2c","Invalid DB response!")}function c(){logger.log("DEB",r.channel.id,"agent_c2c","cleanup request.."),r.channel.removeListener("ChannelHangupRequest",a),"1"==r.idealAgentFlag&&(logger.log("DEB",r.channel.id,"agent_c2c","calling makeAgentFree to mark the tried agent idle"),agentProcessor.freeAgent(r)),null!=r.agentChannel&&(logger.log("DEB",r.channel.id,"agent_c2c","removeListener of ChannelDtmfReceived"),r.agentChannel.removeListener("ChannelDtmfReceived",n))}function n(e,n){logger.log("IMP",r.channel.id,"agent_c2c","Inside on_dtmf"),"#"===e.digit&&(console.log("Accepted recording",r.callRecordedFile),r.client.recordings.stop({recordingName:r.callRecordedFile},function(e){}))}function a(e,n){"INCOMING"==r.callDirection&&"22"!=r.callcdrMode&&(r.customer_number=r.idealAgentNumber),0!=r.CustomerConnectedStartTime?(r.CustomerConnectedEndTime=dateTime.getAgentDateTime(),r.CustomerConnectedDuration=dateTime.calculateDuration(r.CustomerConnectedStartTime,r.CustomerConnectedEndTime),logger.log("DEB",r.channel.id,"agent_c2c","CustomerConnectedDuration("+r.CustomerConnectedDuration+")")):r.CustomerConnectedStartTime="0",logger.log("DEB",r.channel.id,"agent_c2c","on_hangup, idealAgentNumber("+r.idealAgentNumber+") , customer_number("+r.customer_number+")"),logger.log("IMP",r.channel.id,"agent_c2c","Inside on_hangup"),c(),logger.log("DEB",r.channel.id,"agent_c2c","State-Machine Update to ==> [Event.HANGUP]"),r.state_machine.change_state(Event.HANGUP)}function o(e,n){e.hangup(function(e){})}function i(e,n){logger.log("IMP",r.channel.id,"agent_c2c",""),logger.log("IMP",r.channel.id,"agent_c2c","ON Event [channelStateChange {"+n.state+"}]"),logger.log("IMP",r.channel.id,"agent_c2c",""),console.log(util.format("Channel %s is now: %s",n.name,n.state)),"Ringing"==n.state?(logger.log("DEB",r.channel.id,"agent_c2c","inside Ringing state"),r.CustomerRingingStartTime=dateTime.getAgentDateTime(),logger.log("DEB",r.channel.id,"agent_c2c","CustomerRingingStartTime("+r.CustomerRingingStartTime+")")):"Up"==n.state?(logger.log("DEB",r.channel.id,"agent_c2c","inside Up state"),r.CustomerConnectedStartTime=dateTime.getAgentDateTime(),logger.log("DEB",r.channel.id,"agent_c2c","CustomerConnectedStartTime("+r.CustomerConnectedStartTime+")"),r.CustomerRingingEndTime=dateTime.getAgentDateTime(),r.CustomerRingingDuration=dateTime.calculateDuration(r.CustomerRingingStartTime,r.CustomerRingingEndTime),logger.log("DEB",r.channel.id,"agent_c2c","CustomerRingingDuration("+r.CustomerRingingDuration+")"),r.customerStatus="0"):logger.log("DEB",r.channel.id,"agent_c2c","inside other state")}logger.log("DEB",r.channel.id,"agent_c2c","checking App c2c detail to make customer call.."),logger.log("DEB",r.channel.id,"agent_c2c","SmeId: "+r.smeID),logger.log("DEB",r.channel.id,"agent_c2c","VirtualNo: "+r.calllongcode),logger.log("DEB",r.channel.id,"agent_c2c","agentnumber: "+r.idealAgentNumber),logger.log("DEB",r.channel.id,"agent_c2c","recording flag: "+r.smerecording),logger.log("DEB",r.channel.id,"agent_c2c","masking flag: "+r.smemasking),logger.log("DEB",r.channel.id,"agent_c2c","voicemail flag: "+r.smemasking),logger.log("DEB",r.channel.id,"agent_c2c","sme status flag: "+r.smestatus),logger.log("DEB",r.channel.id,"agent_c2c","valid SME Algorithm: "+r.smeAlgorithm),logger.log("DEB",r.channel.id,"agent_c2c","Queue Limit: "+r.queue_limit),logger.log("DEB",r.channel.id,"agent_c2c","agentid: "+r.idealAgentID),logger.log("DEB",r.channel.id,"agent_c2c","agentgroup: "+r.idealAgentGroup),api.funGetAppOutCallDetail(r.channel.id,r.smeID,r.idealAgentNumber,r.called_number,r.callSessionId,function(e,n,a){var l,t;e||200!=n.statusCode||0==a.status?(logger.log("DEB",r.channel.id,"agent_c2c","Agent not have valid data of far end  statusCode("+n.statusCode+") && result.status("+a.status+")"),logger.log("IMP",r.channel.id,"agent_c2c","agentC2CtriedCounter("+r.agentC2CtriedCounter+")"),cfg.outgoing.agent_c2c_wait_retry<r.agentC2CtriedCounter?(logger.log("DEB",r.channel.id,"agent_c2c","play, try again and kill the call."),logger.log("DEB",r.channel.id,"agent_c2c","Media State Update: AGENT_C2C_TRY_LATER"),r.user_ivr_state="AGENT_C2C_TRY_LATER"):(logger.log("DEB",r.channel.id,"agent_c2c","lets try again to get c2c agent data"),logger.log("DEB",r.channel.id,"agent_c2c","Media State Update: WAITING_AGENT_C2C_DATA"),r.user_ivr_state="WAITING_AGENT_C2C_DATA"),r.agentC2CtriedCounter++,g(r.currentState)):0!=a.data.click2call.length?(logger.log("DEB",r.channel.id,"agent_c2c","Valid Application API response of click2call"),r.customer_number=a.data.click2call[0].to_no,r.called_number=a.data.click2call[0].from_no,r.c2cMode=a.data.click2call[0].call_mode,r.address_book_name="",r.address_book_id="0",logger.log("DEB",r.channel.id,"agent_c2c","Customer Name: "+r.address_book_name),logger.log("DEB",r.channel.id,"agent_c2c","Addressbook ID: "+r.address_book_id),logger.log("DEB",r.channel.id,"agent_c2c","Customer Number: "+r.customer_number),logger.log("DEB",r.channel.id,"agent_c2c","C2C Mode: "+r.c2cMode),r.customer_number.length>=cfg.outgoing.number_length?(r.ringTime=0,r.ccEndNode="CCG_"+r.allocated_agent+"_"+r.ringTime+"_"+r.dialStatus,r.callMode="WRINGG_APP",logger.log("DEB",r.channel.id,"agent_c2c","Called Number: "+r.customer_number),r.client.channels.setChannelVar({channelId:r.channel.id,variable:"dialstatus",value:r.dialstatus},function(e){e?logger.log("ERR",r.channel.id,"agent_c2c","["+this.state_name+"]: error in setchannelvar: "+e):logger.log("DEB",r.channel.id,"agent_c2c","Channel Variable dialstatus set!!")}),r.client.channels.setChannelVar({channelId:r.channel.id,variable:"ccEndNode",value:r.ccEndNode},function(e){e?logger.log("IMP",r.channel.id,"agent_c2c","["+this.state_name+"]: error in setchannelvar: "+e):logger.log("IMP",r.channel.id,"agent_c2c","Channel Variable ccEndNode set!!")}),logger.log("DEB",r.channel.id,"agent_c2c","Agent "+r.idealAgentNumber+" is safe to patch a call"),logger.log("IMP",r.channel.id,"agent_c2c","###################### Dial Status is : "+r.dialStatus),logger.log("IMP",r.channel.id,"agent_c2c","###################### cc EndNode is : "+r.ccEndNode),r.allocated_agent=r.customer_number,logger.log("DEB",r.channel.id,"agent_c2c","Will Dial the allocated Agent:"+r.allocated_agent),logger.log("DEB",r.channel.id,"agent_c2c","and bridge the customer number:"+r.channel.caller.number),r.channel.caller.number,r.allocated_agent,logger.log("DEB",r.channel.id,"agent_c2c","and bridge the customer number:"+r.channel.caller.number),logger.log("DEB",r.channel.id,"agent_c2c","Mark the agent busy - markAgentBusy"),agentProcessor.markAgentBusy(r),l=r.channel,e="",t=r.client.Channel(),r.callpatchedAgentId=r.idealAgentID,r.AgentStartCallTime=dateTime.getAgentDateTime(),e=r.calllongcode,r.agentChannel=t,n="SIP/"+r.allocated_agent+"@"+cfg.asterisk.gw_ipaddr_port,e="komm_kommuno <"+e+">",logger.log("DEB",r.channel.id,"agent_c2c","Current State ["+r.currentState+"] Update to ==> [originating]"),r.currentState="originating",logger.log("DEB",r.channel.id,"agent_c2c","callerID("+e+"), endPoint("+n+")"),r.originateTime=(new Date).getTime(),logger.log("DEB",r.channel.id,"agent_c2c","Call Originate Time :  "+r.originateTime),r.waitingTime=(r.originateTime-r.startTime)/1e3,logger.log("DEB",r.channel.id,"agent_c2c"," Waiting  time : [",r.waitingTime,"]"),t.on("ChannelStateChange",i),r.client.channels.create({app:cfg.asterisk.stasisApp,endpoint:r.callerId},function(e,n){var c,o;e?logger.log("ERR",r.channel.id,"call_autodial","=======>>>>>call.client.create failed "+e):(r.agentChannel=n,logger.log("DEB",r.channel.id,"call_autodial","=======>>>>>call.client.create success "+n.id),c=l,o=n,logger.log("IMP",r.channel.id,"call_autodial",""),logger.log("IMP",r.channel.id,"call_autodial","Internal Function [createBridge]"),logger.log("IMP",r.channel.id,"call_autodial",""),r.client.Bridge().create({type:"mixing"},function(e,n){if(e)throw logger.log("ERRRRRRRRRRRRRRRR",r.channel.id,"call_autodial","Failed to Create bridge: "+n.id),e;var a,l,t,g;r.bridgeObj=n,logger.log("DEB",r.channel.id,"call_autodial","=========>>>>>. Created bridge: "+n.id),t=c,g=n,logger.log("IMP",r.channel.id,"call_autodial",""),logger.log("IMP",r.channel.id,"call_autodial","Internal Function [addAChannelsToBridge]"),logger.log("IMP",r.channel.id,"call_autodial",""),g.addChannel({channel:[t.id]},function(e){if(e)throw logger.log("ERR",r.channel.id,"call_autodial","========>A Failed to add Leg: "+t.id+" into Bridge: "+g.id),e;logger.log("DEB",r.channel.id,"call_autodial","========>A Success to add Leg: "+t.id+" into Bridge: "+g.id),r.BRIDGED_TIME=(new Date).getTime();parseInt(r.BRIDGED_TIME/1e3)}),a=o,l=n,logger.log("IMP",r.channel.id,"call_autodial",""),logger.log("IMP",r.channel.id,"call_autodial","Internal Function [addBChannelsToBridge]"),logger.log("IMP",r.channel.id,"call_autodial",""),l.addChannel({channel:[a.id]},function(e){if(e)throw logger.log("ERR",r.channel.id,"call_autodial","========>B Failed to add Leg: "+a.id+" into Bridge: "+l.id),e;logger.log("DEB",r.channel.id,"call_autodial","========>B Success to add Leg: "+a.id+" into Bridge: "+l.id),a.dial({channelId:r.channel.id,endpoint:endPoint,app:cfg.asterisk.stasisApp,appArgs:r.callType,callerId:callerID},function(e,n){e?logger.log("ERR",r.channel.id,"call_autodial","=======>>>>>cdial failed "+e):(logger.log("DEB",r.channel.id,"call_autodial","=======>>>>>dial success "),r.legACallRingTime=dateTime.getAgentDateTime(),"22"==r.adCallPriority?(r.customerStartCallTime=dateTime.getAgentDateTime(),logger.log("DEB",r.channel.id,"call_autodial","customerStartCallTime("+r.customerStartCallTime+") marked on dialing"),logger.log("IMP",n.id,"call_autodial","(CUSTOMER_NEW_CALL_TIMER started for 30 seconds)"),setTimeout(fun_newCallTimerCustomer,5e4,r)):setTimeout(fun_newCallTimer,5e4,r))}),r.BRIDGED_TIME=(new Date).getTime();parseInt(r.BRIDGED_TIME/1e3)}),o.on("ChannelStateChange",i),o.on("StasisStart",function(e,n){logger.log("IMP",r.channel.id,"call_autodial",""),logger.log("IMP",r.channel.id,"call_autodial","ON Event [StasisStart]"),logger.log("IMP",r.channel.id,"call_autodial",""),logger.log("DEB",r.channel.id,"call_autodial","StasisStart => createBridge")}),o.on("StasisEnd",function(e,n){logger.log("IMP",r.channel.id,"call_autodial",""),logger.log("IMP",r.channel.id,"call_autodial","ON Event [StasisEnd]"),logger.log("IMP",r.channel.id,"call_autodial",""),logger.log("DEB",r.channel.id,"call_autodial","StasisEnd => createBridge")})}))}),l.on("StasisEnd",function(e,n){var a;logger.log("DEB",r.channel.id,"agent_c2c"," channel inside StasisEnd  "+n.id),logger.log("DEB",r.channel.id,"agent_c2c"," Inside channel StasisEnd function "),a=t,logger.log("DEB",r.channel.id,"agent_c2c","Channel "+n.name+" left our application, hanging up dialed channel: "+a.name),a.hangup(function(e){})}),t.on("ChannelDestroyed",function(e,n){var a,l,t;logger.log("DEB",r.channel.id,"agent_c2c","Inside dialed ChannelDestroyed, Current State ["+r.currentState+"]"),logger.log("DEB",r.channel.id,"agent_c2c","Agent call disconneced, Reason_Cause["+e.cause+"] Cause_Msg["+e.cause_txt+"]"),r.agentCallResponseCode=e.cause,r.agentCallResponseMsg=e.cause_txt,r.customerEndCallTime=dateTime.getAgentDateTime(),0!=r.CustomerConnectedStartTime?(r.CustomerConnectedEndTime=dateTime.getAgentDateTime(),r.CustomerConnectedDuration=dateTime.calculateDuration(r.CustomerConnectedStartTime,r.CustomerConnectedEndTime),logger.log("DEB",r.channel.id,"call_autodial","CustomerConnectedDuration("+r.CustomerConnectedDuration+")")):r.CustomerConnectedStartTime="0","patched"!=r.currentState?(e=dateTime.getAgentDateTime(),e=dateTime.calculateDuration(r.AgentStartCallTime,e),logger.log("DEB",r.channel.id,"agent_c2c","failed call duration("+e+" seconds)"),logger.log("DEB",r.channel.id,"agent_c2c","Play End Call Termination to A-Party"),"16"==r.agentCallResponseCode&&e<"30"||"17"==r.agentCallResponseCode?(logger.log("DEB",r.channel.id,"agent_c2c","Media State Update: PLAY_BUSSY"),r.user_ivr_state="PLAY_BUSSY"):"16"==r.agentCallResponseCode&&"30"<=e?(logger.log("DEB",r.channel.id,"agent_c2c","Media State Update: PLAY_SWITCHEDOFF_NOTRESPONDING"),r.user_ivr_state="PLAY_SWITCHEDOFF_NOTRESPONDING"):"19"==r.agentCallResponseCode?(logger.log("DEB",r.channel.id,"agent_c2c","Media State Update: PLAY_BUSSY_SWITCHEDOFF"),r.user_ivr_state="PLAY_BUSSY_SWITCHEDOFF"):(logger.log("DEB",r.channel.id,"agent_c2c","no match case so playing default end call media"),logger.log("DEB",r.channel.id,"agent_c2c","Media State Update: PLAY_NOT_AVAILABLE"),r.user_ivr_state="PLAY_NOT_AVAILABLE"),g(r.currentState)):logger.log("DEB",r.channel.id,"agent_c2c","State ("+r.currentState+") so no Media for End Call Termination"),"1"==r.callRecordingStatus?(a="/var/spool/asterisk/recording/"+r.callRecordedFile+".wav",l=cfg.media.rec_dir+"/"+r.callRecordedFile+".wav",r.callRecordedFile=l,logger.log("DEB",r.channel.id,"agent_c2c","active recording, need to stop!"),console.log("Accepted recording",r.callRecordedFile),r.client.recordings.stop({recordingName:r.callRecordedFile},function(e){}),t=r.callRecordedFile+".wav",e=cfg.media.rec_dir+"/"+r.smeID,fs.existsSync(e)||fs.mkdirSync(e),mv(a,l,function(e){if(e)throw e;logger.log("DEB",r.channel.id,"agent_outgoing","RECORDING Successfully Move from: ("+a+") to: ("+l+")"),r.callRecordedFile=l,r.s3RecordedFile=l,logger.log("DEB",r.channel.id,"agent_outgoing","storing recording in DB.."),r.callDirection="OUTGOING",null!=r.s3RecordedFile&&0!=r.s3RecordedFile.length&&awsS3.s3Upload(r,r.smeID,r.s3RecordedFile,t,function(e,n){e?(logger.log("ERR",r.channel.id,"agent_outgoing","s3Upload failed, store for retry"),logger.log("DEB",r.channel.id,"agent_outgoing","calling agentProcessor.SaveS3FailedRecordingData "),agentProcessor.SaveS3FailedRecordingData(r)):(logger.log("DEB",r.channel.id,"agent_outgoing","s3Upload Received: "+n.Location),console.log(n),r.s3uploadedUrl=n.Location,r.callDirection="OUTGOING",logger.log("DEB",r.channel.id,"agent_outgoing","calling agentProcessor.SaveS3RecordingData "),agentProcessor.SaveS3RecordingData(r))})})):logger.log("DEB",r.channel.id,"agent_c2c","No active recording!"),r.callInfo="outgoing",logger.log("DEB",r.channel.id,"agent_c2c","generating agent cdr for agent call reporting (failed to answer)"),logger.log("DEB",r.channel.id,"agent_c2c","============================================== free the agent =================================="),agentProcessor.freeAgent(r),agentProcessor.logAgentCdr(r),agentProcessor.logCustomerCdr(r),"originating"==r.currentState?(r.disconnectStatus="NOANSWER",c()):"feedback"==r.currentState?logger.log("DEB",r.channel.id,"agent_c2c"," call current state is : ["+r.currentState+"]"):("user_disconnect"!=r.currentState&&(logger.log("DEB",r.channel.id,"agent_c2c","Current State ["+r.currentState+"] Update to ==> [agent_disconnect]"),r.currentState="agent_disconnect",r.disconnectStatus="AGENT",logger.log("DEB",r.channel.id,"agent_c2c"," Call disconnected by agent")),o(r.channel))}),e="channel:"+r.channel.id,logger.log("DEB",r.channel.id,"agent_c2c","stasisApp app name: "+cfg.asterisk.stasisApp),r.client.applications.subscribe({applicationName:cfg.asterisk.stasisApp,eventSource:e},function(e,n){e?logger.log("ERR",r.channel.id,"agent_c2c","Error while subscribing for channel!!"):logger.log("DEB",r.channel.id,"agent_c2c","Subscribed for channel successfully")}),t.on("Ring",function(e,n){logger.log("DEB",r.channel.id,"agent_c2c","Ringing!!!")}),r.client.channels.ring({channelId:r.channel.id},function(e){e&&logger.log("['ERR', call.channel.id, 'agent_c2c', "+this.state_name+"]: Error in Ringing Function "+e)}),t.on("ChannelHold",function(e,n){r.holdEventTime=(new Date).getTime(),logger.log("DEB",r.channel.id,"agent_c2c","#####   ChannelHold and time is : !!!"+r.holdEventTime)}),t.on("ChannelUnhold",function(e,n){logger.log("DEB",r.channel.id,"agent_c2c"," #####   ChannelUnhold !!!"),r.currentTime=(new Date).getTime();var a=r.currentTime-r.holdEventTime;logger.log("DEB",r.channel.id,"agent_c2c","current time is : "+r.currentTime),r.totalHoldDuration=r.totalHoldDuration+a,logger.log("DEB",r.channel.id,"agent_c2c","current hold Duration is : "+a),logger.log("DEB",r.channel.id,"agent_c2c","holdDuration "+r.totalHoldDuration/1e3),r.client.channels.setChannelVar({channelId:r.channel.id,variable:"holdTime",value:r.totalHoldDuration/1e3},function(e){e&&logger.log("ERR",r.channel.id,"agent_c2c","["+this.state_name+"]: Error in SetChannelVar "+e)})}),t.on("StasisStart",function(e,n){logger.log("DEB",r.channel.id,"agent_c2c","Stasis Started for dialed:  "+n.id),logger.log("DEB",r.channel.id,"agent_c2c","Stasis Started time : "+r.startTime),agentProcessor.updateLiveCall(r,"22")})):(logger.log("ERR",r.channel,"agent_c2c","Invalid number to make click2call ("+r.customer_number+")"),logger.log("DEB",r.channel.id,"agent_c2c","Agent not have valid data of far end call.customer_number.length:("+r.customer_number.length+")"),r.callagentincomingstate="AGENT_WELCOME",logger.log("DEB",r.channel.id,"agent_c2c","Its Agent Incoming call (IVR-Call)"),logger.log("DEB",r.channel.id,"agent_c2c","State-Machine Update to ==> [Event.AGENT_INCOMING]"),r.state_machine.change_state(Event.AGENT_INCOMING)),logger.log("DEB",r.channel.id,"agent_c2c","Init Call CDR and Unique Number Detail Set on NEW CALL."),agentProcessor.setEndCallCdr(r,"0"),agentProcessor.addLiveCall(r)):(logger.log("ERR",r.channel.id,"agent_c2c","invalid customer number length: "+r.customer_number.length),r.callagentincomingstate="AGENT_WELCOME",logger.log("DEB",r.channel.id,"agent_c2c","Its Agent Incoming call (IVR-Call)"),logger.log("DEB",r.channel.id,"agent_c2c","State-Machine Update to ==> [Event.AGENT_INCOMING]"),r.state_machine.change_state(Event.AGENT_INCOMING))})}}module.exports=AgentClick2Call;