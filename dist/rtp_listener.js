const dgram=require("dgram"),RTPHeaderSize=12,serverPort=8082,silenceThreshold=100,server=dgram.createSocket("udp4");server.on("listening",()=>{var e=server.address();console.log(`Listening for RTP packets on ${e.address}:`+e.port)}),server.on("message",(e,o)=>{if(e.length<RTPHeaderSize)console.log("Received RTP packet is too short");else{var r=e.slice(RTPHeaderSize);let o=0;for(let e=0;e<r.length;e+=2){var n=r.readInt16BE(e);o+=n*n}o<silenceThreshold?console.log("Silence detected"):console.log("Audio detected");var s=(192&e.readUInt8(0))>>6,l=e.readUInt8(1),t=e.readUInt16BE(2),c=e.readUInt32BE(4),a=e.readUInt32BE(8),s=(console.log("Received RTP Packet:"),console.log("Version:",s),console.log("Payload Type:",l),console.log("Sequence Number:",t),console.log("Timestamp:",c),console.log("SSRC:",a),e.toString("hex")),l=e.toString("binary");console.log("Packet Content (Hexadecimal):"),console.log(s),console.log("Packet Content (Binary):"),console.log(l)}}),server.on("error",e=>{console.error("Error occurred:",e),server.close()}),server.bind(serverPort);