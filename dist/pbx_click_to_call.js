var Event=require("./events"),cfg=require("../../pbx_config"),pbx_db=require("./pbx_db"),pbx_api=require("./api/pbx_api"),pbx_logger=require("./logger/pbx_logger"),express=require("express"),dt=require("./common/datetime"),ari=require("ari-client"),util=require("util"),path=require("path"),fs=require("fs"),mv=require("mv"),logger=new pbx_logger,dateTime=new dt,dbOutput="",dbSMEid="",api=new pbx_api;function CrmClicktoCall(r){this.state_name="user_agent_state",logger.log("DEB",r.channel.id,"click_to_call","Current State ["+r.currentState+"] Update to ==> [dialing]"),r.currentState="dialing",r.dialStatus="NOANSWER";r.totalHoldDuration=0,this.enter=function(){function e(e,l,n){var i,a,c;e||200!=l.statusCode?logger.log("ERR",channel,"click_to_call","Error thrown at url call"+e):(logger.log("DEB",r.channel.id,"click_to_call","HTML Received: "+n),l=n.split(";"),logger.log("DEB",r.channel.id,"click_to_call","agentstatus: "+l[0]),logger.log("DEB",r.channel.id,"click_to_call","agentid: "+l[1]),logger.log("DEB",r.channel.id,"click_to_call","agentgroup: "+l[2]),logger.log("DEB",r.channel.id,"click_to_call","agentnumber: "+l[3]),e=l[0].split("="),logger.log("DEB",r.channel.id,"click_to_call","0: "+e[0]),logger.log("DEB",r.channel.id,"click_to_call","1: "+e[1]),"'idle'"===e[1]?(logger.log("DEB",r.channel.id,"click_to_call","Response: "+l[3]+" is idle"),l[0].split("="),n=l[1].split("="),c=l[2].split("="),l=l[3].split("="),n=n[1].replace("'","").replace("'",""),r.idealAgentID=n,r.idealAgentGroup=c[1],n=l[1].replace("'","").replace("'",""),r.idealAgentNumber=n,r.idealAgentFlag="1",l=apiResponseTmpG5[1].replace("'","").replace("'",""),r.stickyAgentFlag=l,n=c[1].replace("'","").replace("'",""),r.idealAgentGroup=n,"0"===r.stickyAgentFlag?logger.log("IMP",r.channel.id,"click_to_call","Sticky [NO_STICKY_AENT] and (idle) AgentNumber("+r.idealAgentNumber+") Group("+r.idealAgentGroup+")"):"1"===r.stickyAgentFlag?logger.log("IMP",r.channel.id,"click_to_call","Sticky [AGENT_LOOSELY_BIND] and (idle) AgentNumber("+r.idealAgentNumber+") Group("+r.idealAgentGroup+")"):"2"===r.stickyAgentFlag?logger.log("IMP",r.channel.id,"click_to_call","Sticky [AGENT_STRICTLY_BIND] and (idle) AgentNumber("+r.idealAgentNumber+") Group("+r.idealAgentGroup+")"):logger.log("ERR",r.channel.id,"click_to_call","!invalid senario, AgentNumber("+r.idealAgentNumber+") Group("+r.idealAgentGroup+")"),r.client.channels.setChannelVar({channelId:r.channel.id,variable:"dialstatus",value:r.dialstatus},function(e){e?logger.log("ERR",r.channel.id,"click_to_call","["+this.state_name+"]: error in setchannelvar: "+e):logger.log("DEB",r.channel.id,"click_to_call","Channel Variable dialstatus set!!")}),r.client.channels.setChannelVar({channelId:r.channel.id,variable:"ccEndNode",value:r.ccEndNode},function(e){e?logger.log("IMP",r.channel.id,"click_to_call","["+this.state_name+"]: error in setchannelvar: "+e):logger.log("IMP",r.channel.id,"click_to_call","Channel Variable ccEndNode set!!")}),logger.log("DEB",r.channel.id,"click_to_call","Agent "+r.idealAgentNumber+" is safe to patch a call"),logger.log("IMP",r.channel.id,"click_to_call","###################### Dial Status is : "+r.dialStatus),logger.log("IMP",r.channel.id,"click_to_call","###################### cc EndNode is : "+r.ccEndNode),r.allocated_agent=r.idealAgentNumber,logger.log("DEB",r.channel.id,"click_to_call","Will Dial the allocated Agent:"+r.allocated_agent),logger.log("DEB",r.channel.id,"click_to_call","and bridge the customer number:"+r.channel.caller.number),r.channel.caller.number,r.allocated_agent,logger.log("DEB",r.channel.id,"click_to_call","and bridge the customer number:"+r.channel.caller.number),i=r.channel,l="",a=r.client.Channel(),"1"===r.smemasking?(r.channel.caller.number,Math.floor(9e5*Math.random()+1e5),l=r.called_number,logger.log("IMP",r.channel.id,"click_to_call","Masking [ON] setting CLI as ["+l+"]")):(l=r.called_number,logger.log("IMP",r.channel.id,"click_to_call","Masking [OFF] setting CLI as ["+l+"]")),r.AgentStartCallTime=dateTime.getAgentDateTime(),r.agentChannel=a,c="SIP/"+r.allocated_agent+"@"+cfg.asterisk.gw_ipaddr_port,l="ed_wringg <"+l+">",logger.log("DEB",r.channel.id,"click_to_call","Current State ["+r.currentState+"] Update to ==> [originating]"),logger.log("DEB",r.channel.id,"click_to_call","callerID("+l+"), endPoint("+c+")"),r.currentState="originating",r.originateTime=(new Date).getTime(),logger.log("DEB",r.channel.id,"click_to_call","Call Originate Time :  "+r.originateTime),r.waitingTime=(r.originateTime-r.startTime)/1e3,logger.log("DEB",r.channel.id,"click_to_call"," Waiting  time : [",r.waitingTime,"]"),r.client.channels.setChannelVar({channelId:r.channel.id,variable:"waitingTime",value:r.waitingTime},function(e){e?logger.log("ERR",r.channel.id,"click_to_call","["+this.state_name+"]: Error in SetChannelVar "+e):logger.log("DEB",r.channel.id,"click_to_call","["+this.state_name+"]: Channel Varaible SetChannelVar set!")}),i.on("StasisEnd",function(e,l){var n;logger.log("DEB",r.channel.id,"click_to_call"," channel inside StasisEnd  "+l.id),logger.log("DEB",r.channel.id,"click_to_call"," Inside channel StasisEnd function "),n=a,logger.log("DEB",r.channel.id,"click_to_call","Channel "+l.name+" left our application, hanging up dialed channel: "+n.name),n.hangup(function(e){})}),a.on("ChannelDestroyed",function(e,l){var n,a;logger.log("DEB",r.channel.id,"click_to_call","Inside dialed ChannelDestroyed, Current State ["+r.currentState+"]"),logger.log("DEB",r.channel.id,"click_to_call","Agent call disconneced, Reason_Cause["+e.cause+"] Cause_Msg["+e.cause_txt+"]"),r.agentCallResponseCode=e.cause,r.agentCallResponseMsg=e.cause_txt,"1"===r.callRecordingStatus?(logger.log("DEB",r.channel.id,"click_to_call","active recording, need to stop!"),console.log("Accepted recording",r.callRecordedFile),r.client.recordings.stop({recordingName:r.callRecordedFile},function(e){}),n="/var/spool/asterisk/recording/"+r.callRecordedFile+".wav",a=cfg.media.rec_dir+"/"+r.callRecordedFile+".wav",e=cfg.media.rec_dir+"/"+r.smeID,fs.existsSync(e)||fs.mkdirSync(e),mv(n,a,function(e){if(e)throw e;logger.log("DEB",r.channel.id,"click_to_call","RECORDING Successfully Move from: ("+n+") to: ("+a+")"),r.callRecordedFile=a,logger.log("DEB",r.channel.id,"click_to_call","storing recording in DB.."),r.channel,logger.log("DEB",r.channel.id,"click_to_call","inside function logAgentRecording"),e=r.callRecordedFile+"#",logger.log("DEB",r.channel.id,"click_to_call","aAgentFlag(1)"),logger.log("DEB",r.channel.id,"click_to_call","callSessionId("+r.callSessionId+")"),logger.log("DEB",r.channel.id,"click_to_call","smeID("+r.smeID+")"),logger.log("DEB",r.channel.id,"click_to_call","idealAgentID("+r.idealAgentID+")"),logger.log("DEB",r.channel.id,"click_to_call","customer Number("+r.channel.caller.number+")"),logger.log("DEB",r.channel.id,"click_to_call","AgentCallDuration("+r.AgentCallDuration+")"),logger.log("DEB",r.channel.id,"click_to_call","RecordingFile("+e+")"),logger.log("DEB",r.channel.id,"click_to_call","aRecStatus(0)"),logger.log("DEB",r.channel.id,"click_to_call","aInsertFlag(1)"),t.saveRecordings(r.channel.id,"1",r.callRecordedFileRaw,r.smeID,r.idealAgentID,r.channel.caller.number,r.AgentCallDuration,e,"0","1",function(e,l){e?logger.log("ERR",r.channel.id,"","Error thrown at DB call:"+e):(r.adRecordingFileId=l,logger.log("IMP",r.channel.id,"click_to_call","Success DB response where we called: "+l))})})):logger.log("DEB",r.channel.id,"click_to_call","No active recording!"),logger.log("DEB",r.channel.id,"click_to_call","generating agent cdr for agent call reporting (failed to answer)"),r.channel,logger.log("DEB",r.channel.id,"click_to_call","inside function logAgentCdr"),r.AgentEndCallTime=dateTime.getAgentDateTime(),r.AgentCallDuration=dateTime.calculateDuration(r.AgentStartCallTime,r.AgentEndCallTime),logger.log("DEB",r.channel.id,"click_to_call","idealAgentReportFlag("+r.idealAgentReportFlag+")"),logger.log("DEB",r.channel.id,"click_to_call","smeID("+r.smeID+")"),logger.log("DEB",r.channel.id,"click_to_call","idealAgentID("+r.idealAgentID+")"),logger.log("DEB",r.channel.id,"click_to_call","AgentStatus("+r.AgentStatus+")"),logger.log("DEB",r.channel.id,"click_to_call","agentCallResponseCode("+r.agentCallResponseCode+")"),logger.log("DEB",r.channel.id,"click_to_call","AgentStartCallTime("+r.AgentStartCallTime+")"),logger.log("DEB",r.channel.id,"click_to_call","AgentEndCallTime("+r.AgentEndCallTime+")"),logger.log("DEB",r.channel.id,"click_to_call","AgentCallDuration("+r.AgentCallDuration+")"),logger.log("DEB",r.channel.id,"click_to_call","catDescAgent as groupId("+r.catDescAgent+")"),logger.log("DEB",r.channel.id,"click_to_call","customer Number("+r.channel.caller.number+")"),logger.log("DEB",r.channel.id,"click_to_call","callSessionId("+r.callSessionId+")"),logger.log("DEB",r.channel.id,"click_to_call","callMode("+r.callMode+")"),logger.log("DEB",r.channel.id,"click_to_call","callInfo("+r.callInfo+")"),logger.log("DEB",r.channel.id,"click_to_call","Calling db function setAgentCdr with Param AgentID("+r.idealAgentID+"), catDesc("+r.catDescAgent+"), agentrepeatid(0), flag(2), alogtype("+r.smeAlgorithm+")"),logger.log("DEB",r.channel.id,"click_to_call","Agent Leg CDR #"+r.idealAgentReportFlag+"#"+r.smeID+"#"+r.idealAgentID+"#"+r.AgentStatus+"#"+r.agentCallResponseCode+"#"+r.AgentStartCallTime+"#"+r.AgentEndCallTime+"#"+r.AgentCallDuration+"#"+r.catDescAgent+"#"+r.channel.caller.number+"#"+r.callSessionId+"#"+r.callMode+"#"+r.callInfo+"#"),t.setAgentCdr(r.channel.id,r.idealAgentReportFlag,r.smeID,r.idealAgentID,r.AgentStatus,r.agentCallResponseCode,r.AgentStartCallTime,r.AgentEndCallTime,r.AgentCallDuration,r.catDescAgent,r.channel.caller.number,r.callSessionId,r.callMode,r.callInfo,function(e,l){e?logger.log("ERR",r.channel.id,"","Error thrown at DB call:"+e):logger.log("IMP",r.channel.id,"click_to_call","Success DB response where we called: "+l)}),"originating"==r.currentState?(r.disconnectStatus="NOANSWER",g(),logger.log("DEB",r.channel.id,"click_to_call","State-Machine Update to ==> [Event.AGENT_CALL]"),r.state_machine.change_state(Event.AGENT_CALL)):"feedback"==r.currentState?logger.log("DEB",r.channel.id,"click_to_call"," call current state is : ["+r.currentState+"]"):("user_disconnect"!=r.currentState&&(logger.log("DEB",r.channel.id,"click_to_call","Current State ["+r.currentState+"] Update to ==> [agent_disconnect]"),r.currentState="agent_disconnect",r.disconnectStatus="AGENT",logger.log("DEB",r.channel.id,"click_to_call"," Call disconnected by agent")),e=i,logger.log("DEB",r.channel.id,"click_to_call","Dialed channel "+l.name+" has been hung up, hanging up channel "+e.name),e.hangup(function(e){}))}),n="channel:"+r.channel.id,logger.log("DEB",r.channel.id,"click_to_call","stasisApp app name: "+cfg.asterisk.stasisApp),r.client.applications.subscribe({applicationName:cfg.asterisk.stasisApp,eventSource:n},function(e,l){e?logger.log("ERR",r.channel.id,"click_to_call","Error while subscribing for channel!!"):logger.log("DEB",r.channel.id,"click_to_call","Subscribed for channel successfully")}),a.on("Ring",function(e,l){logger.log("DEB",r.channel.id,"click_to_call","Ringing!!!")}),r.client.channels.ring({channelId:r.channel.id},function(e){e&&logger.log("['ERR', call.channel.id, 'click_to_call', "+this.state_name+"]: Error in Ringing Function "+e)}),a.on("ChannelHold",function(e,l){r.holdEventTime=(new Date).getTime(),logger.log("DEB",r.channel.id,"click_to_call","#####   ChannelHold and time is : !!!"+r.holdEventTime)}),a.on("ChannelUnhold",function(e,l){logger.log("DEB",r.channel.id,"click_to_call"," #####   ChannelUnhold !!!"),r.currentTime=(new Date).getTime();var n=r.currentTime-r.holdEventTime;logger.log("DEB",r.channel.id,"click_to_call","current time is : "+r.currentTime),r.totalHoldDuration=r.totalHoldDuration+n,logger.log("DEB",r.channel.id,"click_to_call","current hold Duration is : "+n),logger.log("DEB",r.channel.id,"click_to_call","holdDuration "+r.totalHoldDuration/1e3),r.client.channels.setChannelVar({channelId:r.channel.id,variable:"holdTime",value:r.totalHoldDuration/1e3},function(e){e&&logger.log("ERR",r.channel.id,"click_to_call","["+this.state_name+"]: Error in SetChannelVar "+e)})}),a.on("StasisStart",function(e,l){var a,c,t;logger.log("DEB",r.channel.id,"click_to_call","Stasis Started for dialed:  "+l.id),logger.log("DEB",r.channel.id,"click_to_call","Stasis Started time : "+r.startTime),a=i,c=l,t=r.client.Bridge(),c.on("StasisEnd",function(e,l){var n;logger.log("DEB",r.channel.id,"click_to_call","Inside dialed StasisEnd function"),"none"===r.calldisconnectedBy&&(r.calldisconnectedBy="agent_disconnect"),n=l,l=t,logger.log("DEB",r.channel.id,"click_to_call","Dialed channel "+n.name+" has left our application, destroying bridge "+n.name),l.destroy(function(e){if(e)throw e;logger.log("DEB",r.channel.id,"click_to_call","Bridge Destroyed !"+n.name)})}),c.on("ChannelDtmfReceived",o),c.answer(function(e){if(e)throw e;logger.log("DEB",r.channel.id,"click_to_call","Dialed Channel Answered. Inform CRM about patching here"),r.dialStatus="ANSWER",logger.log("DEB",r.channel.id,"click_to_call","Dial Status change to  : ["+r.dialStatus+"]"),r.answerTime=(new Date).getTime();var l,n,e=parseInt(r.answerTime/1e3);logger.log("DEB",r.channel.id,"click_to_call","answer time is "+e),r.ringTime=(r.answerTime-r.originateTime)/1e3,r.ccEndNode="CCG_"+r.allocated_agent+"_"+r.ringTime+"_"+r.dialStatus,logger.log("DEB",r.channel.id,"click_to_call"," Ring Time : ["+r.ringTime+"] and CCG endNode is : ["+r.ccEndNode+"]"),r.client.channels.setChannelVar({channelId:r.channel.id,variable:"ringTime",value:r.ringTime},function(e){e?logger.log("ERR",r.channel.id,"click_to_call","["+this.state_name+"]: Error in SetChannelVar: "+e):logger.log("DEB",r.channel.id,"click_to_call","["+this.state_name+"]: Channel Varaible ringTime set! ")}),r.client.channels.setChannelVar({channelId:r.channel.id,variable:"callPatchTime",value:e},function(e){e?logger.log("ERR",r.channel.id,"click_to_call","["+this.state_name+"]: Error in SetChannelVar: "+e):logger.log("DEB",r.channel.id,"click_to_call","["+this.state_name+"]: Channel Varaible callPatchTime set! ")}),r.client.channels.setChannelVar({channelId:r.channel.id,variable:"dialStatus",value:r.dialStatus},function(e){e?logger.log("ERR",r.channel.id,"click_to_call","["+this.state_name+"]: Error in SetChannelVar(%s)"+e):logger.log("DEB",r.channel.id,"click_to_call","["+this.state_name+"]: Channel Varaible dialStatus set! ")}),r.client.channels.setChannelVar({channelId:r.channel.id,variable:"ccEndNode",value:r.ccEndNode},function(e){e?logger.log("ERR",r.channel.id,"click_to_call","["+this.state_name+"]: Error in SetChannelVar: "+e):logger.log("DEB",r.channel.id,"click_to_call","["+this.state_name+"]: Channel Varaible ccEndNode set! ")}),r.client.channels.setChannelVar({channelId:r.channel.id,variable:"waitingStatus",value:"ANSWERED"},function(e){e?logger.log("ERR",r.channel.id,"click_to_call","["+this.state_name+"]: Error in SetChannelVar(%s)"+e):logger.log("DEB",r.channel.id,"click_to_call","["+this.state_name+"]: Channel Varaible waitingStatus set! ")}),e=a,l=c,n=t,logger.log("DEB",r.channel.id,"click_to_call","Adding channel "+e.name+" and dialed channel "+l.name+" to bridge: "+n.id),n.addChannel({channel:[e.id,l.id]},function(e){if(e)throw e;r.BRIDGED_TIME=(new Date).getTime();e=parseInt(r.BRIDGED_TIME/1e3);logger.log("DEB",r.channel.id,"click_to_call","Time When bridged:"+e)}),logger.log("DEB",r.channel.id,"click_to_call","Will send notify for channel "+a.id+" and caller: "+a.caller.number),logger.log("DEB",r.channel.id,"click_to_call","Current State ["+r.currentState+"] Update to ==> [patched]"),r.currentState="patched"}),t.create({type:"mixing,dtmf_events,proxy_media"},function(e,l){if(e)throw e;logger.log("DEB",r.channel.id,"click_to_call","Created bridge: "+l.id),r.AgentStatus=0,"2"===r.callanswerFlag&&(r.callanswerFlag="1"),"1"===r.callfinalStatus&&(r.callfinalStatus="0"),"none"===r.callpatchedAgentGroup&&(r.callpatchedAgentGroup=r.idealAgentGroup),"none"===r.callpatchedAgentId&&(r.callpatchedAgentId=r.idealAgentID),"false"===r.callcdrFlag&&(r.callcdrFlag="true;"),"1"===r.smerecording&&(logger.log("IMP",r.channel.id,"click_to_call","enabled SME recording flag: "+r.smerecording),r.callRecordedFileRaw="REC_"+r.channel.id+"_"+Date.now().toString(),r.callRecordedFile=r.smeID+"/"+r.callRecordedFileRaw,r.client.bridges.record({bridgeId:l.id,format:"wav",name:r.callRecordedFile},e=>{}),logger.log("IMP",r.channel.id,"click_to_call","Recording started @: "+r.callRecordedFile),r.callRecordingStatus="1")})}),a.originate({endpoint:c,app:cfg.asterisk.stasisApp,appArgs:"AGENT_CH",callerId:l},function(e,l){e&&logger.log("ERR",r.channel.id,"click_to_call","Error in dialing("+e+")")})):"'0'"===e[1]?(logger.log("DEB",r.channel.id,"click_to_call","no available agent for sme"),"1"===r.smevoicemail?r.callvoicemailstate="PLAY_WELCOME":r.callvoicemailstate="NO_VOICEMAIL",logger.log("DEB",r.channel.id,"click_to_call","State-Machine Update to ==> [Event.VOICEMAIL]"),r.state_machine.change_state(Event.VOICEMAIL)):"'busy'"===e[1]&&"'2'"===e[4]?(logger.log("DEB",r.channel.id,"click_to_call","[AGENT_STRICTLY_BIND] & (busy) of smeID("+r.smeID+") Agent("+e[3]+")"),"1"===r.smevoicemail?r.callvoicemailstate="PLAY_WELCOME":r.callvoicemailstate="NO_VOICEMAIL",logger.log("DEB",r.channel.id,"click_to_call","State-Machine Update to ==> [Event.VOICEMAIL]"),r.state_machine.change_state(Event.VOICEMAIL)):logger.log("ERR",r.channel.id,"click_to_call","Error while getting agents for sme"))}var t=new pbx_db,l=(logger.log("IMP",r.channel.id,"click_to_call","Entering user_agent_state: user_agent_state"),r.channel.on("ChannelHangupRequest",c),r.ringTime=0,r.ccEndNode="CCG_"+r.allocated_agent+"_"+r.ringTime+"_"+r.dialStatus,function(e,l,n){logger.log("DEB",r.channel.id,"click_to_call","getUsedAgentList: AgentID("+e+"), catDesc("+n+"), AgentNumber("+l+")"),logger.log("DEB",r.channel.id,"click_to_call","apiAgentArray length ("+r.apiAgentArray.length+")");for(var a="",c=0;c<r.apiAgentArray.length;c++){var t=r.apiAgentArray[c];a=a+","+t.AgentId}return logger.log("DEB",r.channel.id,"click_to_call","already tried agents List ("+a+")"),a}((r.channel.id,r.idealAgentID),r.idealAgentNumber,r.catDescAgent));function g(){var a,e,l,n;logger.log("DEB",r.channel.id,"click_to_call","cleanup request.."),r.channel.removeListener("ChannelHangupRequest",c),"1"===r.idealAgentFlag&&null!=r.agentChannel&&(logger.log("DEB",r.channel.id,"click_to_call","calling makeAgentFree to mark the tried agent idle"),a=r.channel,logger.log("DEB",r.channel.id,"click_to_call","inside function makeAgentFree"),logger.log("DEB",r.channel.id,"click_to_call","Calling function setAgentFree with Param AgentID("+r.idealAgentID+"), catDesc("+r.catDescAgent+"), agentrepeatid(0), flag(2), alogtype("+r.smeAlgorithm+")"),api.setAgentFree(r.channel.id,r.idealAgentID,r.catDescAgent,"0","2",r.smeAlgorithm,r.callSessionId,function(e,l,n){e||200!=l.statusCode?logger.log("ERR",a,"click_to_call","Error thrown at url call:"+e):(logger.log("DEB",a,"click_to_call","HTML Received: "+n),l=n.split("="),r.idealAgentFlag="0","'idle'"===l[1]?logger.log("DEB",a,"click_to_call","AgentID("+r.idealAgentID+") AgentGroup("+r.idealAgentGroup+") AgentNumber("+r.idealAgentNumber+") marked free!"):logger.log("ERR",a,"click_to_call","AgentID("+r.idealAgentID+") AgentGroup("+r.idealAgentGroup+") AgentNumber("+r.idealAgentNumber+") failed to marked free!"))}),logger.log("DEB",r.channel.id,"click_to_call","adding agent to application array"),r.channel,e=r.idealAgentID,l=r.idealAgentNumber,n=r.catDescAgent,logger.log("DEB",r.channel.id,"click_to_call","appendAgent to array: AgentID("+e+"), catDesc("+n+"), AgentNumber("+l+")"),r.apiAgentArray.push({AgentId:r.idealAgentID,AgentNumber:r.idealAgentNumber,AgentDesc:n})),null!=r.agentChannel&&(logger.log("DEB",r.channel.id,"click_to_call","removeListener of ChannelDtmfReceived"),r.agentChannel.removeListener("ChannelDtmfReceived",o))}function o(e,l){logger.log("IMP",r.channel.id,"click_to_call","Inside on_dtmf"),"#"===e.digit&&(console.log("Accepted recording",r.callRecordedFile),r.client.recordings.stop({recordingName:r.callRecordedFile},function(e){}))}function c(e,l){logger.log("IMP",r.channel.id,"click_to_call","Inside on_hangup"),g(),logger.log("DEB",r.channel.id,"click_to_call","State-Machine Update to ==> [Event.HANGUP]"),r.state_machine.change_state(Event.HANGUP)}logger.log("IMP",r.channel.id,"click_to_call","getUsedAgentList return ("+l+")"),""!=l?(logger.log("IMP",r.channel.id,"click_to_call","Calling API getNextFreeAgent with Param, smeID:"+r.smeID+" & type:1 & agentList:("+l+")"),logger.log("IMP",r.channel.id,"click_to_call","[GET_FREE_AGENT] smeID:"+r.smeID+" & type:1 & agentList:("+l+")"),api.getNextFreeAgent(r.channel.id,r.smeID,r.catDescAgent,l,"1",r.smeAlgorithm,r.calling_number,r.callSessionId,e)):(logger.log("IMP",r.channel.id,"click_to_call","Calling API getNextFreeAgent with Param, smeID:"+r.smeID+" & type:1"),logger.log("IMP",r.channel.id,"click_to_call","[GET_FREE_AGENT] smeID:"+r.smeID+" & type:1"),api.getNextFreeAgent(r.channel.id,r.smeID,r.catDescAgent,"0","1",r.smeAlgorithm,r.calling_number,r.callSessionId,e))}}module.exports=CrmClicktoCall;